{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"h1\", null, _toDisplayString($setup.plusDo), 1\n  /* TEXT */\n  ), _createElementVNode(\"input\", {\n    type: \"text\",\n    onInput: _cache[0] || (_cache[0] = (...args) => $setup.writeText && $setup.writeText(...args))\n  }, null, 32\n  /* HYDRATE_EVENTS */\n  )]);\n}","map":{"version":3,"mappings":";;uBACEA,oBAGM,KAHN,EAGM,IAHN,EAGM,CAFFC,oBAAmB,IAAnB,EAAmB,IAAnB,EAAmBC,iBAAbC,aAAa,CAAnB,EAAY;AAAA;AAAZ,GAEE,EADDF,oBAAsC,OAAtC,EAAsC;AAA/BG,QAAI,EAAC,MAA0B;AAAlBC,WAAK,yCAAEF,6CAAF;AAAa,GAAtC;;AAAA,GACC,CAHN","names":["_createElementBlock","_createElementVNode","_toDisplayString","$setup","type","onInput"],"sourceRoot":"","sources":["/Applications/kdh3543/vue_practice1/src/components/PlusDo.vue"],"sourcesContent":["<template>\n  <div>\n      <h1>{{plusDo}}</h1> \n       <input type=\"text\" @input=\"writeText\">\n  </div>\n</template>\n\n<script>\nimport {ref} from 'vue';\nexport default {\n    \n    emits:['writeText'],\n    setup(props,{emit}){\n        const plusDo = ref('plusDo');\n        const writeText = ref('');\n        return{\n            writeText,\n            plusDo\n        }\n    }\n    \n}\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}