{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"h1\", null, _toDisplayString($setup.plusDo), 1\n  /* TEXT */\n  ), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.writeText = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $setup.writeText]])]);\n}","map":{"version":3,"mappings":";;uBACEA,oBAGM,KAHN,EAGM,IAHN,EAGM,CAFFC,oBAAmB,IAAnB,EAAmB,IAAnB,EAAmBC,iBAAbC,aAAa,CAAnB,EAAY;AAAA;AAAZ,GAEE,kBADDF,oBAAuC,OAAvC,EAAuC;AAAhCG,QAAI,EAAC,MAA2B;+DAAXD,mBAASE;AAAE,GAAvC;;AAAA,oBAA4BF,mBAC3B,CAHN","names":["_createElementBlock","_createElementVNode","_toDisplayString","$setup","type","$event"],"sourceRoot":"","sources":["/Applications/kdh3543/vue_practice1/src/components/PlusDo.vue"],"sourcesContent":["<template>\n  <div>\n      <h1>{{plusDo}}</h1> \n       <input type=\"text\" v-model=\"writeText\">\n  </div>\n</template>\n\n<script>\nimport {ref} from 'vue';\nexport default {\n    \n    emits:['writeText'],\n    setup(props,{emit}){\n        const plusDo = ref('plusDo');\n        const writeText = () =>{\n            emit(writeText);\n        }\n        return{\n            writeText,\n            plusDo\n        }\n    }\n    \n}\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}