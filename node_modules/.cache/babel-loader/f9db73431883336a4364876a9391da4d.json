{"ast":null,"code":"import { toDisplayString as _toDisplayString, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = [\"align\"];\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"label\", null, \"v-model: \", -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"label\", null, \"v-bind:\", -1\n/* HOISTED */\n);\n\nconst _hoisted_5 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_PlusDo = _resolveComponent(\"PlusDo\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", null, [_createTextVNode(_toDisplayString($setup.mes) + \" \", 1\n  /* TEXT */\n  ), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.put = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $setup.put]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $setup.change && $setup.change(...args))\n  }, \"btn1\")]), _createElementVNode(\"div\", null, [_createElementVNode(\"h1\", {\n    align: _ctx.direction\n  }, \"h\", 8\n  /* PROPS */\n  , _hoisted_2)]), _createElementVNode(\"div\", null, [_createElementVNode(\"h3\", null, _toDisplayString($setup.message), 1\n  /* TEXT */\n  ), _hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.message = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $setup.message]]), _hoisted_4, _createElementVNode(\"input\", {\n    type: \"text\",\n    value: $setup.message,\n    onInput: _cache[3] || (_cache[3] = $event => $setup.message = $event.target.value)\n  }, null, 40\n  /* PROPS, HYDRATE_EVENTS */\n  , _hoisted_5)]), _createVNode(_component_PlusDo)]);\n}","map":{"version":3,"mappings":";;AACOA,OAAK,EAAC;;;;gCAYPC,oBAAwB,OAAxB,EAAwB,IAAxB,EAAO,WAAP,EAAgB;AAAA;AAAhB;;gCACAA,oBAAsB,OAAtB,EAAsB,IAAtB,EAAO,SAAP,EAAc;AAAA;AAAd;;;;;;uBAbJC,oBAiBM,KAjBN,cAiBM,CAhBJD,oBAIM,KAJN,EAIM,IAJN,EAIM,mCAHFE,cAAK,KACP;AAAA;GAEI,kBAFJF,oBAAiC,OAAjC,EAAiC;AAA1BG,QAAI,EAAC,MAAqB;+DAALD,aAAGE;AAAE,GAAjC;;AAAA,oBAA4BF,aAExB,EADJF,oBAAqC,QAArC,EAAqC;AAA5BK,WAAK,yCAAEH,uCAAF;AAAuB,GAArC,EAAwB,MAAxB,CACI,CAJN,CAgBI,EAXJF,oBAEM,KAFN,EAEM,IAFN,EAEM,CADJA,oBAA6B,IAA7B,EAA6B;AAAxBM,SAAK,EAAEC;AAAiB,GAA7B,EAAuB,GAAvB,EAAwB;AAAA;AAAxB,IAAwBC,UAAxB,CACI,CAFN,CAWI,EAPJR,oBAIM,KAJN,EAIM,IAJN,EAIM,CAHJA,oBAAoB,IAApB,EAAoB,IAApB,EAAoBS,iBAAdP,cAAc,CAApB,EAAa;AAAA;AAAb,GAGI,EAFJQ,UAEI,kBAFoBV,oBAAsC,OAAtC,EAAsC;AAA/BG,QAAI,EAAC,MAA0B;+DAAVD,iBAAOE;AAAG,GAAtC;;AAAA,oBAA4BF,iBAEhD,EADJS,UACI,EADkBX,oBAAyE,OAAzE,EAAyE;AAAlEG,QAAI,EAAC,MAA6D;AAArDS,SAAK,EAAEV,cAA8C;AAApCW,WAAK,sCAAEX,iBAAQE,MAAM,CAACU,MAAP,CAAcF,KAAxB;AAA+B,GAAzE;;AAAA,eAClB,CAJN,CAOI,EAFJG,aAAUC,iBAAV,CAEI,CAjBN","names":["class","_createElementVNode","_createElementBlock","$setup","type","$event","onClick","align","_ctx","_hoisted_2","_toDisplayString","_hoisted_3","_hoisted_4","value","onInput","target","_createVNode","_component_PlusDo"],"sourceRoot":"","sources":["/Applications/kdh3543/vue_practice1/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div>\n      {{mes}}\n      <input type=\"text\" v-model=\"put\">\n      <button @click=\"change\">btn1</button>\n    </div>\n    <div>\n      <h1 :align=\"direction\">h</h1>\n    </div>\n\n    <div>\n      <h3>{{message}}</h3>\n      <label>v-model: </label><input type=\"text\" v-model=\"message\"/>\n      <label>v-bind:</label><input type=\"text\" :value=\"message\" @input=\"message=$event.target.value\">\n    </div>\n    <PlusDo />\n\n  </div>\n\n</template>\n\n<script>\nimport {ref} from 'vue';\nimport PlusDO from './components/PlusDo.vue';\n\nexport default {\n  components:{\n    PlusDO,\n  },\n  setup(){\n    const mes = ref('test');\n    const put = ref('');  \n    const change = () => {\n      mes.value = put.value;\n    }\n    const direction = ref('left');\n    setInterval(()=>{\n      if(direction.value=='left'){\n        direction.value='right'\n      }else if(direction.value=='right'){\n        direction.value='middle'\n      }else{\n        direction.value='left'\n      }\n    },1000)\n    const message = ref('default');\n    return{\n     mes,\n     change,\n     put,\n     message\n    //  direction\n    }  \n  }\n  \n}\n\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}