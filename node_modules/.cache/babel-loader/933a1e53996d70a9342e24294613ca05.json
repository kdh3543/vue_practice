{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, resolveComponent as _resolveComponent, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-09eb515a\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  class: \"row\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"col-6\"\n}, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_4 = {\n  key: 0,\n  class: \"col-6\"\n};\nconst _hoisted_5 = {\n  class: \"form-group\"\n};\n\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \"Status\", -1\n/* HOISTED */\n));\n\nconst _hoisted_7 = {\n  class: \"col-12\"\n};\nconst _hoisted_8 = {\n  class: \"form-group\"\n};\n\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \"Body\", -1\n/* HOISTED */\n));\n\nconst _hoisted_10 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Toast = _resolveComponent(\"Toast\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [$setup.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, \" Loading... \")) : (_openBlock(), _createElementBlock(\"form\", {\n    key: 1,\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $setup.onSave && $setup.onSave(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, $props.editing ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n    type: \"button\",\n    class: _normalizeClass([\"btn\", $setup.todo.completed ? 'btn-success' : 'btn-danger']),\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.toggleTodoStatus && $setup.toggleTodoStatus(...args))\n  }, _toDisplayString($setup.todo.completed ? 'Completed' : 'Incompleted'), 3\n  /* TEXT, CLASS */\n  )])])])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [_hoisted_9, _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.todo.body = $event),\n    class: \"form-control\",\n    cols: \"30\",\n    rows: \"10\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $setup.todo.body]])])])]), _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"btn btn-primary\",\n    disabled: !$setup.todoUpdated\n  }, _toDisplayString($props.editing ? 'Update' : 'Create'), 9\n  /* TEXT, PROPS */\n  , _hoisted_10), _createElementVNode(\"button\", {\n    class: \"btn btn-outline-dark m-2\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $setup.moveToTodoListPage && $setup.moveToTodoListPage(...args))\n  }, \"Cancel\")], 32\n  /* HYDRATE_EVENTS */\n  )), $setup.showToast ? (_openBlock(), _createBlock(_component_Toast, {\n    key: 2,\n    message: $setup.toastMessage,\n    type: $setup.toastAlertType\n  }, null, 8\n  /* PROPS */\n  , [\"message\", \"type\"])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;;;;;;;AAMWA,OAAK,EAAC;;;gEACTC,oBAEM,KAFN,EAEM;AAFDD,OAAK,EAAC;AAEL,CAFN,EAAkB,IAAlB,EAAkB;AAAA;AAAlB;;;;AAGoBA,OAAK,EAAC;;;AACnBA,OAAK,EAAC;;;gEACTC,oBAAqB,OAArB,EAAqB,IAArB,EAAO,QAAP,EAAa;AAAA;AAAb;;;AAMCD,OAAK,EAAC;;;AACJA,OAAK,EAAC;;;gEACTC,oBAAmB,OAAnB,EAAmB,IAAnB,EAAO,MAAP,EAAW;AAAA;AAAX;;;;;;uBAnBVC,oBA8BM,KA9BN,EA8BM,IA9BN,EA8BM,CA7BOC,gCAAXD,oBAEM,KAFN,EAEME,UAFN,EAAoB,cAApB,oBAGAF,oBAuBO,MAvBP,EAuBO;UAAA;AAvBOG,YAAM,wDAAUF,uCAAV,EAAgB,WAAhB;AAuBb,GAvBP,GACEF,oBAkBM,KAlBN,cAkBM,CAjBJK,UAiBI,EAdOC,gCAAXL,oBAOM,KAPN,cAOM,CANJD,oBAKM,KALN,cAKM,CAJJO,UAII,EAHJP,oBAEM,KAFN,EAEM,IAFN,EAEM,CADJA,oBAA4K,QAA5K,EAA4K;AAApKQ,QAAI,EAAC,QAA+J;AAAtJT,SAAK,mBAAC,KAAD,EAAeG,YAAKO,SAAL,GAAc,aAAd,GAAc,YAA7B,EAAiJ;AAAlFC,WAAK,yCAAER,2DAAF;AAA6E,GAA5K,mBAAqHA,YAAKO,SAAL,GAAc,WAAd,GAAc,cAAnI,EAAmI;AAAA;AAAnI,GACI,CAFN,CAGI,CALN,CAMI,CAPN,sCAcI,EANJT,oBAKM,KALN,cAKM,CAJJA,oBAGM,KAHN,cAGM,CAFJW,UAEI,kBADJX,oBAAkF,UAAlF,EAAkF;+DAA/DE,YAAKU,OAAIC,OAAsD;AAApDd,SAAK,EAAC,cAA8C;AAA/Be,QAAI,EAAC,IAA0B;AAArBC,QAAI,EAAC;AAAgB,GAAlF;;AAAA,oBAAmBb,YAAKU,OACpB,CAHN,CAII,CALN,CAMI,CAlBN,GAoBAZ,oBAAgH,QAAhH,EAAgH;AAAxGQ,QAAI,EAAC,QAAmG;AAA1FT,SAAK,EAAC,iBAAoF;AAAjEiB,YAAQ,GAAGd;AAAsD,GAAhH,mBAAyEI,iBAAO,QAAP,GAAO,SAAhF,EAAgF;AAAA;AAAhF,IAAgFW,WAAhF,GACAjB,oBAAoF,QAApF,EAAoF;AAA5ED,SAAK,EAAC,0BAAsE;AAA1CW,WAAK,yCAAER,+DAAF;AAAqC,GAApF,EAAqE,QAArE,EAtBF;;AAAA,IA0BI,EADSA,kCAAbgB,aAAwEC,gBAAxE,EAAwE;UAAA;AAA/CC,WAAO,EAAElB,mBAAsC;AAAvBM,QAAI,EAAEN;AAAiB,GAAxE;;AAAA,6DACI,CA9BN","names":["class","_createElementVNode","_createElementBlock","$setup","_hoisted_1","onSubmit","_hoisted_3","$props","_hoisted_6","type","completed","onClick","_hoisted_9","body","$event","cols","rows","disabled","_hoisted_10","_createBlock","_component_Toast","message"],"sourceRoot":"","sources":["/Applications/kdh3543/vue_practice1/src/components/TodoForm.vue"],"sourcesContent":["<template>\n  <div>\n    <div v-if=\"loading\">\n      Loading...\n    </div>\n    <form v-else @submit.prevent=\"onSave\">\n      <div class=\"row\">\n        <div class=\"col-6\">\n          \n        </div>\n        <div v-if=\"editing\" class=\"col-6\">\n          <div class=\"form-group\">\n            <label>Status</label>\n            <div>\n              <button type=\"button\" class=\"btn\" :class=\"todo.completed ? 'btn-success' : 'btn-danger'\" @click=\"toggleTodoStatus\">{{todo.completed ? 'Completed' : 'Incompleted'}}</button>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-12\">\n          <div class=\"form-group\">\n            <label>Body</label>\n            <textarea v-model=\"todo.body\" class=\"form-control\" cols=\"30\" rows=\"10\"></textarea>\n          </div>\n        </div>\n      </div>\n      \n      <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"!todoUpdated\">{{editing? 'Update' : 'Create'}}</button>\n      <button class=\"btn btn-outline-dark m-2\" @click=\"moveToTodoListPage\">Cancel</button>\n    </form>\n    \n    <Toast v-if=\"showToast\" :message=\"toastMessage\" :type=\"toastAlertType\"/>\n  </div>\n</template>\n\n<script>\nimport {ref, computed} from 'vue';\nimport {useRoute, useRouter} from 'vue-router';\nimport axios from 'axios';\nimport _ from 'lodash';\nimport Toast from '@/components/Toast.vue';\nimport {useToast} from '@/hooks/toast';\n\nexport default {\n    components:{\n    Toast\n    },\n    props:{\n        editing: {\n            type: Boolean,\n            default: false,\n            body: ''\n        }\n    },\n    setup(props){\n    const route = useRoute();\n    const router = useRouter();\n    const todo = ref({\n        subject : '',\n        completed: false,\n    });\n    const subjectError = ref('');\n    const originTodo = ref(null);\n    const loading = ref(false);\n    const todoId = route.params.id;\n\n    const{\n        toastMessage,\n        toastAlertType,\n        showToast,\n        triggerToast\n    } = useToast();\n\n    const getTodo = async () => {\n        loading.value = true;\n        try{\n        const res = await axios.get('http://localhost:3000/todos/'+todoId)\n        \n        todo.value = {...res.data};\n        originTodo.value = {...res.data};\n        loading.value = false;\n        }catch(err){\n        triggerToast('error','danger');\n        loading.value = false;\n        }\n    }\n    \n    const todoUpdated = computed(() => {\n        return !_.isEqual(todo.value,originTodo.value);\n    })\n\n    const toggleTodoStatus = () => {\n        todo.value.completed = !todo.value.completed;\n    }\n\n    const moveToTodoListPage = () => {\n        router.push({\n        name:'Todos'\n        })\n    }\n    \n    const onSave = async () => {\n        if(!todo.value.subject){\n            subjectError.value = 'Subject is required';\n            return;\n        }\n        subjectError.value='';\n        try{\n            let res;\n            const data = {\n                subject: todo.value.subject,\n                completed: todo.value.completed,\n                body: todo.value.body\n            }\n            if(props.editing){\n                res = await axios.put('http://localhost:3000/todos/'+todoId,data)\n            }else{\n                res = await axios.post('http://localhost:3000/todos/',data)\n                todo.value.subject = '';\n                todo.value.body = '';\n            }\n        \n            originTodo.value = {...res.data}\n            const msg = 'Successfully'+(props.editing? ' Updated':' Created');\n            triggerToast(msg);\n        }catch(err){\n        triggerToast('error','danger');\n        }\n    \n    }\n    if(props.editing){\n        getTodo();\n    }\n    \n    return{\n        todo,\n        loading,\n        toggleTodoStatus,\n        moveToTodoListPage,\n        onSave,\n        todoUpdated,\n        showToast,\n        toastMessage,\n        toastAlertType,\n        subjectError\n    }\n    }\n}\n</script>\n\n<style scoped>\n    .text-red{\n        color: red;\n    }\n</style>"]},"metadata":{},"sourceType":"module"}