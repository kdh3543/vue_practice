{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, withModifiers as _withModifiers, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"card-body p-2 d-flex align-items-center\"\n};\nconst _hoisted_2 = {\n  class: \"form-check flex-grow-1\"\n};\nconst _hoisted_3 = [\"checked\", \"onClick\"];\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.todos, (todo, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: todo.id,\n      class: \"card mt-2\"\n    }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"input\", {\n      class: \"form-check-input\",\n      type: \"checkbox\",\n      checked: todo.completed,\n      onClick: _withModifiers($event => $setup.toggleTodo(index), [\"stop\"]),\n      style: {\n        \"cursor\": \"pointer\"\n      }\n    }, null, 8\n    /* PROPS */\n    , _hoisted_3), _createElementVNode(\"label\", {\n      class: _normalizeClass([\"form-check-label\", {\n        todo: todo.completed\n      }]),\n      onClick: $event => $setup.moveToPage(todo.id)\n    }, _toDisplayString(todo.subject), 11\n    /* TEXT, CLASS, PROPS */\n    , _hoisted_4)]), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n      class: \"btn btn-danger btn-sm\",\n      onClick: _withModifiers($event => $setup.deleteTodo(index), [\"stop\"])\n    }, \" X \", 8\n    /* PROPS */\n    , _hoisted_5)])])]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;AAEWA,OAAK,EAAC;;;AACJA,OAAK,EAAC;;;;;;2BAFjBC,oBA2BQC,SA3BR,EA2BQ,IA3BR,EA2BQC,YA3BqBC,YA2BrB,EA3B0B,CAArBC,IAAqB,EAAfC,KAAe,KAAV;yBAAxBL,oBA2BQ,KA3BR,EA2BQ;AA3B6BM,SAAG,EAAEF,IAAI,CAACG,EA2BvC;AA3B2CR,WAAK,EAAC;AA2BjD,KA3BR,GACIS,oBAyBM,KAzBN,cAyBM,CAxBJA,oBAeM,KAfN,cAeM,CAdJA,oBAMC,OAND,EAMC;AALCT,WAAK,EAAC,kBAKP;AAJCU,UAAI,EAAC,UAIN;AAHEC,aAAO,EAAEN,IAAI,CAACO,SAGhB;AAFEC,aAAK,2BAAOC,kBAAWR,KAAX,CAAP,EAAuB,QAAvB,CAEP;AADCS,WAAsB,EAAtB;AAAA;AAAA;AACD,KAND;;AAAA,iBAcI,EAPJN,oBAMQ,OANR,EAMQ;AALNT,WAAK,mBAAC,kBAAD,EAAmB;AAAAK,cACRA,IAAI,CAACO;AADG,OAAnB,EAKC;AAHLC,aAAK,YAAEC,kBAAWT,IAAI,CAACG,EAAhB;AAGF,KANR,mBAKKH,IAAI,CAACW,QALV,EAKiB;AAAA;AALjB,MAKiBC,UALjB,CAOI,CAfN,CAwBI,EARJR,oBAOM,KAPN,EAOM,IAPN,EAOM,CANJA,oBAKS,QALT,EAKS;AAJPT,WAAK,EAAC,uBAIC;AAHNa,aAAK,2BAAOC,kBAAWR,KAAX,CAAP,EAAuB,QAAvB;AAGC,KALT,EAGC,KAHD,EAKA;AAAA;AALA,MAKAY,UALA,CAMI,CAPN,CAQI,CAzBN,EADJ;GA2BQ,CA3BR;;AAAA","names":["class","_createElementBlock","_Fragment","_renderList","$props","todo","index","key","id","_createElementVNode","type","checked","completed","onClick","$setup","style","subject","_hoisted_4","_hoisted_5"],"sourceRoot":"","sources":["/Applications/kdh3543/vue_practice1/src/components/TodoList.vue"],"sourcesContent":["<template>\n  <div v-for=\"(todo, index) in todos\" :key=\"todo.id\" class=\"card mt-2\">\n      <div class=\"card-body p-2 d-flex align-items-center\" >\n        <div class=\"form-check flex-grow-1\">\n          <input \n            class=\"form-check-input\" \n            type=\"checkbox\"\n            :checked=\"todo.completed\"\n            @click.stop=\"toggleTodo(index)\"\n            style=\"cursor:pointer\"\n          >\n          <label \n            class=\"form-check-label\"\n            :class=\"{ todo: todo.completed }\"\n            @click=\"moveToPage(todo.id)\"\n          >\n            {{ todo.subject }}\n          </label>\n        </div>\n        <div>\n          <button \n            class=\"btn btn-danger btn-sm\"\n            @click.stop=\"deleteTodo(index)\"\n          >\n            X\n          </button>\n        </div>\n      </div>\n    </div>\n</template>\n\n<script>\nimport { useRouter } from 'vue-router';\nexport default {\n    props: {\n        todos: {\n            type: Array,\n            required: true\n        }\n    },\n    emits: ['toggle-todo','delete-todo'],\n    setup(props, {emit}) {\n      const router = useRouter();\n      const toggleTodo = (index) => {\n        emit('toggle-todo', index);\n      };\n      const deleteTodo = (index) => {\n        emit('delete-todo', index);\n      }\n\n      const moveToPage = (todoId) => {\n        console.log(todoId);\n        router.push({\n          name: 'Todo',\n          params:{\n            id: todoId\n          }\n        });\n      }\n\n      return {\n        toggleTodo,\n        deleteTodo,\n        moveToPage,\n        router\n      }\n    }\n}\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}