{"ast":null,"code":"import { withModifiers as _withModifiers, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Teleport as _Teleport, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = [\"onClick\"];\nconst _hoisted_2 = {\n  class: \"flex-grow-1\"\n};\nconst _hoisted_3 = [\"checked\", \"onChange\"];\nconst _hoisted_4 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_List = _resolveComponent(\"List\");\n\n  const _component_Modal = _resolveComponent(\"Modal\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_List, {\n    items: $props.todos\n  }, {\n    default: _withCtx(({\n      item,\n      index\n    }) => [_createElementVNode(\"div\", {\n      class: \"card-body p-2 d-flex align-items-center\",\n      style: {\n        \"cursor\": \"pointer\"\n      },\n      onClick: $event => $setup.moveToPage(item.id)\n    }, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"input\", {\n      class: \"ml-2 mr-2\",\n      type: \"checkbox\",\n      checked: item.completed,\n      onChange: $event => $setup.toggleTodo(index, $event),\n      onClick: _cache[0] || (_cache[0] = _withModifiers(() => {}, [\"stop\"]))\n    }, null, 40\n    /* PROPS, HYDRATE_EVENTS */\n    , _hoisted_3), _createElementVNode(\"span\", {\n      class: _normalizeClass({\n        todo: item.completed\n      })\n    }, _toDisplayString(item.subject), 3\n    /* TEXT, CLASS */\n    )]), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n      class: \"btn btn-danger btn-sm\",\n      onClick: _withModifiers($event => $setup.openModal(item.id), [\"stop\"])\n    }, \" Delete \", 8\n    /* PROPS */\n    , _hoisted_4)])], 8\n    /* PROPS */\n    , _hoisted_1)]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"items\"]), (_openBlock(), _createBlock(_Teleport, {\n    to: \"#modal\"\n  }, [$setup.showModal ? (_openBlock(), _createBlock(_component_Modal, {\n    key: 0,\n    onClose: $setup.closeModal,\n    onDelete: $setup.deleteTodo\n  }, null, 8\n  /* PROPS */\n  , [\"onClose\", \"onDelete\"])) : _createCommentVNode(\"v-if\", true)]))], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;AAQaA,OAAK,EAAC;;;;;;;;;6DAPjBC,aA6BOC,eA7BP,EA6BO;AA7BAC,SAAK,EAAEC;AA6BP,GA7BP,EAAmB;AACNC,WAAO,WAChB,CAyBM;AA1BcC,UA0Bd;AA1BoBC;AA0BpB,KAzBN,KAD+B,CAC/BC,oBAyBM,KAzBN,EAyBM;AAxBJR,WAAK,EAAC,yCAwBF;AAvBJS,WAAuB,EAAvB;AAAA;AAAA,OAuBI;AAtBHC,aAAK,YAAEC,kBAAWL,IAAI,CAACM,EAAhB;AAsBJ,KAzBN,GAKEJ,oBAWM,KAXN,cAWM,CAVJA,oBAMC,OAND,EAMC;AALCR,WAAK,EAAC,WAKP;AAJCa,UAAI,EAAC,UAIN;AAHEC,aAAO,EAAER,IAAI,CAACS,SAGhB;AAFEC,cAAM,YAAEL,kBAAWJ,KAAX,EAAkBU,MAAlB,CAEV;AADEP,aAAK,2CAAN,OAAW,CAAL,EAAK,QAAL;AACP,KAND;;AAAA,iBAUI,EAHJF,oBAEO,MAFP,EAEO;AAFAR,WAAK;AAAAkB,cAAUZ,IAAI,CAACS;AAAf;AAEL,KAFP,mBACKT,IAAI,CAACa,QADV,EACiB;AAAA;AADjB,KAGI,CAXN,GAYAX,oBAOM,KAPN,EAOM,IAPN,EAOM,CANJA,oBAKS,QALT,EAKS;AAJPR,WAAK,EAAC,uBAIC;AAHNU,aAAK,2BAAOC,iBAAUL,IAAI,CAACM,EAAf,CAAP,EAAwB,QAAxB;AAGC,KALT,EAGC,UAHD,EAKA;AAAA;AALA,MAKAQ,UALA,CAMI,CAPN,EAjBF;;AAAA,iBAD+B,CAAf,CADD;;;;AAAA,GAAnB;;AAAA,+BA+BAC,aAMWC,SANX,EAMW;AANDC,MAAE,EAAC;AAMF,GANX,EAAqB,CAEXZ,kCADRU,aAIEG,gBAJF,EAIE;UAAA;AAFCC,WAAK,EAAEd,iBAER;AADCe,YAAM,EAAEf;AACT,GAJF;;AAAA,iEADmB,CAArB","names":["class","_createVNode","_component_List","items","$props","default","item","index","_createElementVNode","style","onClick","$setup","id","type","checked","completed","onChange","$event","todo","subject","_hoisted_4","_createBlock","_Teleport","to","_component_Modal","onClose","onDelete"],"sourceRoot":"","sources":["/Applications/kdh3543/vue_practice1/src/components/TodoList.vue"],"sourcesContent":["<template>\n  <List :items=\"todos\">\n    <template #default=\"{ item, index }\">\n      <div \n        class=\"card-body p-2 d-flex align-items-center\"\n        style=\"cursor: pointer\"\n        @click=\"moveToPage(item.id)\"\n      >\n        <div class=\"flex-grow-1\">\n          <input \n            class=\"ml-2 mr-2\"\n            type=\"checkbox\"\n            :checked=\"item.completed\"\n            @change=\"toggleTodo(index, $event)\"\n            @click.stop\n          >\n          <span :class=\"{ todo: item.completed }\">\n            {{ item.subject }}\n          </span>\n        </div>\n        <div>\n          <button \n            class=\"btn btn-danger btn-sm\"\n            @click.stop=\"openModal(item.id)\"\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    </template>\n  </List>\n  \n  <teleport to=\"#modal\">\n    <Modal \n      v-if=\"showModal\"\n      @close=\"closeModal\"\n      @delete=\"deleteTodo\"\n    />\n  </teleport>\n</template>\n\n<script>\nimport { useRouter } from 'vue-router';\nimport Modal from '@/components/DeleteModal.vue';\nimport { ref } from 'vue';\nimport List from '@/components/List.vue';\n\nexport default {\n    components: {\n      Modal,\n      List\n    },\n    props: {\n        todos: {\n            type: Array,\n            required: true\n        }\n    },\n    emits: ['toggle-todo', 'delete-todo'],\n    setup(props, { emit }) {\n        const router = useRouter();\n        const showModal = ref(false);\n        const todoDeleteId = ref(null);\n        const toggleTodo = (index, event) => {\n          emit('toggle-todo', index, event.target.checked);\n        };\n\n        const openModal = (id) => {\n          todoDeleteId.value = id;\n          showModal.value = true;\n        };\n\n        const closeModal = () => {\n          todoDeleteId.value = null;\n          showModal.value = false;\n        };\n        \n        const deleteTodo = () => {\n          emit('delete-todo', todoDeleteId.value);\n\n          showModal.value = false;\n          todoDeleteId.value = null;\n        };\n\n        const moveToPage = (todoId) => {\n          // router.push('/todos/' + todoId);\n          router.push({\n            name: 'Todo',\n            params: {\n              id: todoId\n            }\n          });\n\n        };\n\n        return {\n            toggleTodo,\n            deleteTodo,\n            moveToPage,\n            showModal,\n            openModal,\n            closeModal,\n        };\n    }\n}\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}