{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass, createBlock as _createBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"To-Do List\", -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = {\n  style: {\n    \"color\": \"red\"\n  }\n};\nconst _hoisted_4 = {\n  key: 0\n};\n\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_6 = {\n  \"aria-label\": \"Page navigation example\"\n};\nconst _hoisted_7 = {\n  class: \"pagination\"\n};\nconst _hoisted_8 = {\n  class: \"page-item\"\n};\nconst _hoisted_9 = [\"onClick\"];\nconst _hoisted_10 = {\n  class: \"page-item\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_TodoSimpleForm = _resolveComponent(\"TodoSimpleForm\");\n\n  const _component_TodoList = _resolveComponent(\"TodoList\");\n\n  const _component_Toast = _resolveComponent(\"Toast\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _withDirectives(_createElementVNode(\"input\", {\n    class: \"form-control\",\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.searchText = $event),\n    placeholder: \"search\",\n    onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => $setup.searchClear && $setup.searchClear(...args), [\"enter\"]))\n  }, null, 544\n  /* HYDRATE_EVENTS, NEED_PATCH */\n  ), [[_vModelText, $setup.searchText]]), _hoisted_2, _createVNode(_component_TodoSimpleForm, {\n    onAddTodo: $setup.addTodo\n  }, null, 8\n  /* PROPS */\n  , [\"onAddTodo\"]), _createElementVNode(\"div\", _hoisted_3, _toDisplayString($setup.error), 1\n  /* TEXT */\n  ), !$setup.todos.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, \" There is nothing \")) : _createCommentVNode(\"v-if\", true), _createVNode(_component_TodoList, {\n    todos: $setup.todos,\n    onToggleTodo: $setup.toggleTodo,\n    onDeleteTodo: $setup.deleteTodo\n  }, null, 8\n  /* PROPS */\n  , [\"todos\", \"onToggleTodo\", \"onDeleteTodo\"]), _hoisted_5, _createElementVNode(\"nav\", _hoisted_6, [_createElementVNode(\"ul\", _hoisted_7, [_createElementVNode(\"li\", _hoisted_8, [$setup.currentPage != 1 ? (_openBlock(), _createElementBlock(\"a\", {\n    key: 0,\n    class: \"page-link\",\n    href: \"#\",\n    onClick: _cache[2] || (_cache[2] = $event => $setup.getTodos($setup.currentPage - 1))\n  }, \"Previous\")) : _createCommentVNode(\"v-if\", true)]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.numberOfPages, page => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      class: _normalizeClass([\"page-item\", $setup.currentPage === page ? 'active' : '']),\n      key: page\n    }, [_createElementVNode(\"a\", {\n      class: \"page-link\",\n      href: \"#\",\n      onClick: $event => $setup.getTodos(page)\n    }, _toDisplayString(page), 9\n    /* TEXT, PROPS */\n    , _hoisted_9)], 2\n    /* CLASS */\n    );\n  }), 128\n  /* KEYED_FRAGMENT */\n  )), _createElementVNode(\"li\", _hoisted_10, [$setup.currentPage != $setup.numberOfPages ? (_openBlock(), _createElementBlock(\"a\", {\n    key: 0,\n    class: \"page-link\",\n    href: \"#\",\n    onClick: _cache[3] || (_cache[3] = $event => $setup.getTodos($setup.currentPage + 1))\n  }, \"Next\")) : _createCommentVNode(\"v-if\", true)])])]), _ctx.showToast ? (_openBlock(), _createBlock(_component_Toast, {\n    key: 1,\n    message: _ctx.toastMessage,\n    type: _ctx.toastAlertType\n  }, null, 8\n  /* PROPS */\n  , [\"message\", \"type\"])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;gCAEIA,oBAAmB,IAAnB,EAAmB,IAAnB,EAAI,YAAJ,EAAc;AAAA;AAAd;;gCAQAA,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;;AAEKC,OAAiB,EAAjB;AAAA;AAAA;;;;;;gCAKLD,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;;AACK,gBAAW;;;AACVE,OAAK,EAAC;;;AACJA,OAAK,EAAC;;;;AAENA,OAAK,EAAC;;;;;;;;;uBArBhBC,oBAyBM,KAzBN,EAyBM,IAzBN,EAyBM,CAxBJC,UAwBI,kBAvBJJ,oBAMC,OAND,EAMC;AALGE,SAAK,EAAC,cAKT;AAJGG,QAAI,EAAC,MAIR;+DAHYC,oBAAUC,OAGtB;AAFGC,eAAW,EAAC,QAEf;AADIC,WAAK,mDAAQH,iDAAR,EAAmB,SAAnB;AACT,GAND;;AAAA,oBAGaA,oBAoBT,EAhBJI,UAgBI,EAfJC,aAAsCC,yBAAtC,EAAsC;AAArBC,aAAQ,EAAEP;AAAW,GAAtC,EAAkC,IAAlC,EAAkC;AAAA;AAAlC,IAAkC,aAAlC,CAeI,EAdJN,oBAAsC,KAAtC,cAAsCc,iBAAbR,YAAa,CAAtC,EAA8B;AAAA;AAA9B,GAcI,GAbQA,aAAMS,wBAAlBZ,oBAEM,KAFN,EAEMa,UAFN,EAA0B,oBAA1B,sCAaI,EAVJL,aAA8EM,mBAA9E,EAA8E;AAAnEC,SAAK,EAAEZ,YAA4D;AAApDa,gBAAW,EAAEb,iBAAuC;AAA1Bc,gBAAW,EAAEd;AAAa,GAA9E;;AAAA,8CAUI,EATJe,UASI,EARJrB,oBAMM,KANN,cAMM,CALJA,oBAIK,IAJL,cAIK,CAHHA,oBAA4H,IAA5H,cAA4H,CAAlEM,sBAAW,mBAA/CH,oBAAiG,GAAjG,EAAiG;UAAA;AAA9FD,SAAK,EAAC,WAAwF;AAA5EoB,QAAI,EAAC,GAAuE;AAA5CC,WAAK,sCAAEjB,gBAASA,qBAAW,CAApB,CAAF;AAAuC,GAAjG,EAAqF,UAArF,sCAAsG,CAA5H,CAGG,qBAFHH,oBAAmLqB,SAAnL,EAAmL,IAAnL,EAAmLC,YAA9InB,oBAA8I,EAAtJoB,IAAqB,IAAjB;yBAAjCvB,oBAAmL,IAAnL,EAAmL;AAA/KD,WAAK,mBAAC,WAAD,EAA+DI,uBAAcoB,IAAd,GAAkB,QAAlB,GAAkB,EAAjF,EAA0K;AAA9HC,SAAG,EAAED;AAAyH,KAAnL,GAA4G1B,oBAAkE,GAAlE,EAAkE;AAA/DE,WAAK,EAAC,WAAyD;AAA7CoB,UAAI,EAAC,GAAwC;AAAnCC,aAAK,YAAEjB,gBAASoB,IAAT;AAA4B,KAAlE,mBAAwDA,KAAxD,EAA4D;AAAA;AAA5D,MAA4DE,UAA5D,EAA5G;;AAAA;GAAmL,CAAnL;;AAAA,GAEG,GADH5B,oBAAoI,IAApI,eAAoI,CAA1EM,sBAAaA,sCAAjDH,oBAAyG,GAAzG,EAAyG;UAAA;AAAtGD,SAAK,EAAC,WAAgG;AAApFoB,QAAI,EAAC,GAA+E;AAAxCC,WAAK,sCAAEjB,gBAASA,qBAAW,CAApB,CAAF;AAAmC,GAAzG,EAAiG,MAAjG,sCAA8G,CAApI,CACG,CAJL,CAKI,CANN,CAQI,EADSuB,gCAAbC,aAAwEC,gBAAxE,EAAwE;UAAA;AAA/CC,WAAO,EAAEH,iBAAsC;AAAvBxB,QAAI,EAAEwB;AAAiB,GAAxE;;AAAA,6DACI,CAzBN","names":["_createElementVNode","style","class","_createElementBlock","_hoisted_1","type","$setup","$event","placeholder","onKeyup","_hoisted_2","_createVNode","_component_TodoSimpleForm","onAddTodo","_toDisplayString","length","_hoisted_4","_component_TodoList","todos","onToggleTodo","onDeleteTodo","_hoisted_5","href","onClick","_Fragment","_renderList","page","key","_hoisted_9","_ctx","_createBlock","_component_Toast","message"],"sourceRoot":"","sources":["/Applications/kdh3543/vue_practice1/src/pages/todos/index.vue"],"sourcesContent":["<template>\n  <div>\n    <h2>To-Do List</h2>\n    <input\n        class=\"form-control\"\n        type=\"text\" \n        v-model=\"searchText\"\n        placeholder=\"search\"\n        @keyup.enter=\"searchClear\"\n    >\n    <hr>\n    <TodoSimpleForm @add-todo=\"addTodo\" />\n    <div style=\"color:red\">{{error}}</div>\n    <div v-if=\"!todos.length\">\n      There is nothing\n    </div>\n    <TodoList :todos=\"todos\" @toggle-todo=\"toggleTodo\" @delete-todo=\"deleteTodo\"/>\n    <hr>\n    <nav aria-label=\"Page navigation example\">\n      <ul class=\"pagination\">\n        <li class=\"page-item\"><a class=\"page-link\" href=\"#\" v-if=\"currentPage!=1\" @click=\"getTodos(currentPage-1)\">Previous</a></li>\n        <li class=\"page-item\" v-for=\"page in numberOfPages\" :key=\"page\" :class=\"currentPage===page ? 'active' : ''\"><a class=\"page-link\" href=\"#\" @click=\"getTodos(page)\">{{page}}</a></li>\n        <li class=\"page-item\"><a class=\"page-link\" href=\"#\" v-if=\"currentPage!=numberOfPages\" @click=\"getTodos(currentPage+1)\">Next</a></li>\n      </ul>\n    </nav>\n    <Toast v-if=\"showToast\" :message=\"toastMessage\" :type=\"toastAlertType\"/>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, watch} from 'vue';\nimport TodoSimpleForm from '@/components/TodoSimpleForm.vue';\nimport TodoList from '@/components/TodoList.vue';\nimport axios from 'axios';\nimport Toast from '@/components/Toast.vue';\n\nexport default {\n  components: {\n    TodoSimpleForm,\n    TodoList,\n    Toast\n  },\n  setup() {\n    const todos = ref([]);\n    const error = ref('');\n    const numberOfTodos = ref(0);\n    const currentPage = ref(1);\n    const limit = 5;\n    const searchText = ref('');\n    const numberOfPages = computed(() => {\n      return Math.ceil(numberOfTodos.value/limit);\n    })\n\n    const addTodo = async (todo) => {\n      try{\n        await axios.post('http://localhost:3000/todos',{\n          subject: todo.subject,\n          completed: todo.completed,\n        });\n        getTodos(1);\n      }catch(err){\n        error.value = err;\n      } \n      // .then(res => {\n      //   todos.value.push(res.data);\n      // }).catch(err => {\n      //   \n      // });\n    };\n    \n    const getTodos = async(page = currentPage.value) => {\n      currentPage.value = page;\n      try{\n        const res = await axios.get(`http://localhost:3000/todos?_sort=id&_order=desc&subject_like=${searchText.value}&_page=${page}&_limit=${limit}`)\n        numberOfTodos.value = res.headers['x-total-count'];\n        todos.value = res.data;\n      }catch(err){\n        error.value = err;\n      }      \n    }\n    getTodos();\n\n    const toggleTodo = async (index,checked) => {\n      const id = todos.value[index].id;\n      try{\n        await axios.patch('http://localhost:3000/todos/'+id,{\n          completed: checked\n        });\n        todos.value[index].completed = checked;\n      }catch(err){\n        error.value = err;\n      }\n    };\n\n    const deleteTodo = async (index) => {\n      const id = todos.value[index].id;\n      try{\n        await axios.delete('http://localhost:3000/todos/'+id);\n        getTodos(1);\n        error.value = '';\n      }catch(err){\n        error.value = err;\n      }      \n    };\n\n    // const filteredTodos = computed(() => {\n    //   if(searchText.value){\n    //     return todos.value.filter(todo => {\n    //       return todo.subject.includes(searchText.value);\n    //     });\n    //   }else{\n    //     return todos.value;\n    //   }\n    // })\n\n    //watch를 사용하여 검색\n    let timeout = null;\n    const searchClear = () => {\n      getTodos(1);\n    };\n    watch(searchText, () => {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        getTodos(1);\n      },1000)\n    })\n    return {\n      todos,\n      addTodo,\n      deleteTodo,\n      toggleTodo,\n      searchText,\n      // filteredTodos,\n      error,\n      getTodos,\n      numberOfPages,\n      currentPage,\n      searchClear\n    };\n  }\n}\n</script>\n\n<style>\n  .todo {\n    color: gray;\n    text-decoration: line-through;\n  }\n</style>"]},"metadata":{},"sourceType":"module"}