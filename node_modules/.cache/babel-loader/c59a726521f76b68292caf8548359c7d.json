{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createBlock as _createBlock, Teleport as _Teleport, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"card-body p-2 d-flex align-items-center\"\n};\nconst _hoisted_2 = {\n  class: \"form-check flex-grow-1\"\n};\nconst _hoisted_3 = [\"checked\", \"onClick\"];\nconst _hoisted_4 = [\"onClick\"];\n\nconst _hoisted_5 = /*#__PURE__*/_createTextVNode(\" Delete Todo!! \");\n\nconst _hoisted_6 = /*#__PURE__*/_createTextVNode(\" sure delete? \");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_List = _resolveComponent(\"List\");\n\n  const _component_Modal = _resolveComponent(\"Modal\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_createCommentVNode(\" <div v-for=\\\"(todo, index) in todos\\\" :key=\\\"todo.id\\\" class=\\\"card mt-2\\\"> \"), _createVNode(_component_List, {\n    items: $props.todos\n  }, {\n    default: _withCtx(({\n      item,\n      index\n    }) => [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"input\", {\n      class: \"form-check-input\",\n      type: \"checkbox\",\n      checked: item.completed,\n      onClick: _withModifiers($event => $setup.toggleTodo(index, $event), [\"stop\"]),\n      style: {\n        \"cursor\": \"pointer\"\n      }\n    }, null, 8\n    /* PROPS */\n    , _hoisted_3), _createElementVNode(\"span\", {\n      class: _normalizeClass({\n        todo: item.completed\n      })\n    }, _toDisplayString(item.subject), 3\n    /* TEXT, CLASS */\n    )]), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n      class: \"btn btn-danger btn-sm\",\n      onClick: _withModifiers($event => $setup.openModal(item.id), [\"stop\"])\n    }, \" X \", 8\n    /* PROPS */\n    , _hoisted_4)])])]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"items\"]), (_openBlock(), _createBlock(_Teleport, {\n    to: \"#modal\"\n  }, [$setup.showModal ? (_openBlock(), _createBlock(_component_Modal, {\n    key: 0,\n    onClose: $setup.closeModal,\n    onDelete: $setup.deleteTodo\n  }, {\n    title: _withCtx(() => [_hoisted_5]),\n    body: _withCtx(() => [_hoisted_6]),\n    footer: _withCtx(() => []),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"onClose\", \"onDelete\"])) : _createCommentVNode(\"v-if\", true)]))]);\n}","map":{"version":3,"mappings":";;AAKWA,OAAK,EAAC;;;AACJA,OAAK,EAAC;;;;;iDAwBU;;iDAGD;;;;;;;uBAhC5BC,oBAwCM,KAxCN,EAwCM,IAxCN,EAwCM,CAvCJC,oGAuCI,EAtCFC,aAwBKC,eAxBL,EAwBK;AAxBEC,SAAK,EAAEC;AAwBT,GAxBL,EAAmB;AACRC,WAAO,WAChB,CAoBM;AArBaC,UAqBb;AArBmBC;AAqBnB,KApBN,KAD8B,CAC9BC,oBAoBM,KApBN,cAoBM,CAnBJA,oBAUM,KAVN,cAUM,CATJA,oBAMC,OAND,EAMC;AALCV,WAAK,EAAC,kBAKP;AAJCW,UAAI,EAAC,UAIN;AAHEC,aAAO,EAAEJ,IAAI,CAACK,SAGhB;AAFEC,aAAK,2BAAOC,kBAAWN,KAAX,EAAiBO,MAAjB,CAAP,EAA8B,QAA9B,CAEP;AADCC,WAAsB,EAAtB;AAAA;AAAA;AACD,KAND;;AAAA,iBASI,EAFJP,oBAA4D,MAA5D,EAA4D;AAArDV,WAAK;AAAAkB,cAAQV,IAAI,CAACK;AAAb;AAAgD,KAA5D,mBAAuCL,IAAI,CAACW,QAA5C,EAAmD;AAAA;AAAnD,KAEI,CAVN,CAmBI,EARJT,oBAOM,KAPN,EAOM,IAPN,EAOM,CANJA,oBAKS,QALT,EAKS;AAJPV,WAAK,EAAC,uBAIC;AAHNc,aAAK,2BAAOC,iBAAUP,IAAI,CAACY,EAAf,CAAP,EAAwB,QAAxB;AAGC,KALT,EAGC,KAHD,EAKA;AAAA;AALA,MAKAC,UALA,CAMI,CAPN,CAQI,CApBN,CAD8B,CAAd,CADC;;;;AAAA,GAAnB;;AAAA,cAsCE,iBAbJC,aAYWC,SAZX,EAYW;AAZDC,MAAE,EAAC;AAYF,GAZX,EAAmB,CACJT,kCAAbO,aAUQG,gBAVR,EAUQ;UAAA;AAViBC,WAAK,EAAEX,iBAUxB;AAVqCY,YAAM,EAAEZ;AAU7C,GAVR;AACmBa,SAAK,WAAC,MAEvB,YAFsB;AAGLC,QAAI,WAAC,MAEtB,YAFqB;AAGJC,UAAM,WAAvB,MAEW,EAFY;;;;GAPzB;;AAAA,iEADiB,CAAnB,CAaI,EAxCN","names":["class","_createElementBlock","_createCommentVNode","_createVNode","_component_List","items","$props","default","item","index","_createElementVNode","type","checked","completed","onClick","$setup","$event","style","todo","subject","id","_hoisted_4","_createBlock","_Teleport","to","_component_Modal","onClose","onDelete","title","body","footer"],"sourceRoot":"","sources":["/Applications/kdh3543/vue_practice1/src/components/TodoList.vue"],"sourcesContent":["<template>\n<div>\n  <!-- <div v-for=\"(todo, index) in todos\" :key=\"todo.id\" class=\"card mt-2\"> -->\n    <List :items=\"todos\">\n    <template #default=\"{item, index}\">\n      <div class=\"card-body p-2 d-flex align-items-center\" >\n        <div class=\"form-check flex-grow-1\">\n          <input \n            class=\"form-check-input\" \n            type=\"checkbox\"\n            :checked=\"item.completed\"\n            @click.stop=\"toggleTodo(index,$event)\"\n            style=\"cursor:pointer\"\n          >\n          <span :class=\"{todo:item.completed}\">{{item.subject}}</span>\n          \n        </div>\n        <div>\n          <button \n            class=\"btn btn-danger btn-sm\"\n            @click.stop=\"openModal(item.id)\"\n          >\n            X\n          </button>\n        </div>\n      </div>\n    </template>\n  </List>\n  <teleport to=#modal>\n    <Modal v-if=\"showModal\" @close=\"closeModal\" @delete=\"deleteTodo\">\n      <template v-slot:title>\n        Delete Todo!!\n      </template>\n      <template v-slot:body>\n        sure delete?\n      </template>\n      <template v-slot:footer>\n        \n      </template>\n    </Modal>\n  </teleport>\n</div>\n  \n</template>\n\n<script>\nimport { useRouter } from 'vue-router';\nimport Modal from '@/components/DeleteModal.vue';\nimport {ref} from 'vue';\nimport List from '@/components/List.vue';\n\nexport default {\n    components:{\n      Modal,\n      List\n    },\n    props: {\n        todos: {\n            type: Array,\n            required: true\n        }\n    },\n    emits: ['toggle-todo','delete-todo'],\n    setup(props, {emit}) {\n      const showModal = ref(false);\n      const todoDeleteId = ref(null);\n      const router = useRouter();\n      const toggleTodo = (index,event) => {\n        emit('toggle-todo', index,event.target.checked);\n      };\n\n      const openModal = (id) => {\n        todoDeleteId.value = id;\n        showModal.value = true;\n      }\n\n      const closeModal = (id) => {\n        todoDeleteId.value = null;\n        showModal.value = false;\n      }\n\n      const deleteTodo = () => {\n        emit('delete-todo', todoDeleteId.value);\n        showModal.value = false;\n        todoDeleteId.value = null;\n      }\n\n      const moveToPage = (todoId) => {\n        console.log(todoId);\n        router.push({\n          name: 'Todo',\n          params:{\n            id: todoId\n          }\n        });\n      }\n\n      return {\n        toggleTodo,\n        deleteTodo,\n        moveToPage,\n        router,\n        showModal,\n        openModal,\n        closeModal\n      }\n    }\n}\n</script>\n\n<style>\n  #label:hover{\n    cursor: pointer;\n    transform: scale(1.4);\n  }\n</style>"]},"metadata":{},"sourceType":"module"}