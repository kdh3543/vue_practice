{"ast":null,"code":"import { ref, computed, onUnmounted } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport axios from 'axios';\nimport _ from 'lodash';\nimport Toast from '@/components/Toast.vue';\nexport default {\n  components: {\n    Toast\n  },\n\n  setup() {\n    const route = useRoute();\n    const router = useRouter();\n    const todo = ref(null);\n    const originTodo = ref(null);\n    const loading = ref(true);\n    const todoId = route.params.id;\n    const showToast = ref(false);\n    const toastMessage = ref('');\n    const toastAlertType = ref('');\n    const timeout = ref(null);\n    onUnmounted(() => {\n      console.log('unmout');\n    });\n\n    const getTodo = async () => {\n      try {\n        const res = await axios.get('http://localhost:3000/todos/' + todoId);\n        todo.value = { ...res.data\n        };\n        originTodo.value = { ...res.data\n        };\n        loading.value = false;\n      } catch (err) {\n        triggerToast('error', 'danger');\n      }\n    };\n\n    const todoUpdated = computed(() => {\n      return !_.isEqual(todo.value, originTodo.value);\n    });\n\n    const toggleTodoStatus = () => {\n      todo.value.completed = !todo.value.completed;\n    };\n\n    const moveToTodoListPage = () => {\n      router.push({\n        name: 'Todos'\n      });\n    };\n\n    const triggerToast = (message, type = 'success') => {\n      toastMessage.value = message;\n      toastAlertType.value = type;\n      showToast.value = true;\n      timeout.value = setTimeout(() => {\n        console.log('hello');\n        toastMessage.value = '';\n        toastAlertType.value = '';\n        showToast.value = false;\n      }, 5000);\n    };\n\n    const onSave = async () => {\n      try {\n        const res = await axios.put('http://localhost:3000/todos/' + todoId, {\n          subject: todo.value.subject,\n          completed: todo.value.completed\n        });\n        originTodo.value = { ...res.data\n        };\n        triggerToast('success save');\n      } catch (err) {\n        triggerToast('error', 'danger');\n      }\n    };\n\n    getTodo();\n    return {\n      todo,\n      loading,\n      toggleTodoStatus,\n      moveToTodoListPage,\n      onSave,\n      todoUpdated,\n      showToast,\n      toastMessage,\n      toastAlertType\n    };\n  }\n\n};","map":{"version":3,"mappings":"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","names":["ref","computed","onUnmounted","useRoute","useRouter","axios","_","Toast","components","setup","route","router","todo","originTodo","loading","todoId","params","id","showToast","toastMessage","toastAlertType","timeout","console","log","getTodo","res","get","value","data","err","triggerToast","todoUpdated","isEqual","toggleTodoStatus","completed","moveToTodoListPage","push","name","message","type","setTimeout","onSave","put","subject"],"sourceRoot":"","sources":["/Applications/kdh3543/vue_practice1/src/pages/todos/_id.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>To-Do Page</h1>\n    <div v-if=\"loading\">\n      Loading...\n    </div>\n    <form v-else @submit.prevent=\"onSave\">\n      <div class=\"row\">\n        <div class=\"col-6\">\n          <div class=\"form-group\">\n            <label>Subject</label>\n            <input v-model=\"todo.subject\" type=\"text\" class=\"form-control\">\n          </div>\n        </div>\n        <div class=\"col-6\">\n          <div class=\"form-group\">\n            <label>Status</label>\n            <div>\n              <button type=\"button\" class=\"btn\" :class=\"todo.completed ? 'btn-success' : 'btn-danger'\" @click=\"toggleTodoStatus\">{{todo.completed ? 'Completed' : 'Incompleted'}}</button>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"!todoUpdated\">Save</button>\n      <button class=\"btn btn-outline-dark m-2\" @click=\"moveToTodoListPage\">Cancel</button>\n    </form>\n    <Toast v-if=\"showToast\" :message=\"toastMessage\" :type=\"toastAlertType\"/>\n  </div>\n</template>\n\n<script>\nimport {ref, computed, onUnmounted} from 'vue';\nimport {useRoute, useRouter} from 'vue-router';\nimport axios from 'axios';\nimport _ from 'lodash';\nimport Toast from '@/components/Toast.vue';\n\nexport default {\n    components:{\n      Toast\n    },\n    setup(){\n      const route = useRoute();\n      const router = useRouter();\n      const todo = ref(null);\n      const originTodo = ref(null);\n      const loading = ref(true);\n      const todoId = route.params.id;\n      const showToast = ref(false);\n      const toastMessage = ref('');\n      const toastAlertType = ref('');\n      const timeout = ref(null);\n\n      onUnmounted(()=>{\n        console.log('unmout');\n      })\n\n      const getTodo = async () => {\n        try{\n          const res = await axios.get('http://localhost:3000/todos/'+todoId)\n        \n          todo.value = {...res.data};\n          originTodo.value = {...res.data};\n          loading.value = false;\n        }catch(err){\n          triggerToast('error','danger');\n        }\n        \n      }\n      \n      const todoUpdated = computed(() => {\n        return !_.isEqual(todo.value,originTodo.value);\n      })\n\n      const toggleTodoStatus = () => {\n        todo.value.completed = !todo.value.completed;\n      }\n\n      const moveToTodoListPage = () => {\n        router.push({\n          name:'Todos'\n        })\n      }\n      const triggerToast = (message, type='success') => {\n        toastMessage.value = message;\n        toastAlertType.value = type;\n        showToast.value = true;\n        timeout.value = setTimeout(() => {\n          console.log('hello');\n          toastMessage.value = '';\n          toastAlertType.value = '';\n          showToast.value = false;\n        },5000)\n      }\n      const onSave = async () => {\n        try{\n          const res = await axios.put('http://localhost:3000/todos/'+todoId,{\n            subject: todo.value.subject,\n            completed: todo.value.completed\n          })\n          originTodo.value = {...res.data}\n          triggerToast('success save');\n        }catch(err){\n          triggerToast('error','danger');\n        }\n        \n      }\n\n      getTodo();\n      return{\n        todo,\n        loading,\n        toggleTodoStatus,\n        moveToTodoListPage,\n        onSave,\n        todoUpdated,\n        showToast,\n        toastMessage,\n        toastAlertType\n      }\n    }\n}\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}