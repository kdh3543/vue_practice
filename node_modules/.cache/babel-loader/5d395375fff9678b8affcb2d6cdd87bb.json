{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  \"aria-label\": \"Page navigation example\"\n};\nconst _hoisted_2 = {\n  class: \"pagination\"\n};\nconst _hoisted_3 = {\n  class: \"page-item\"\n};\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = {\n  class: \"page-item\"\n};\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"nav\", _hoisted_1, [_createElementVNode(\"ul\", _hoisted_2, [_createElementVNode(\"li\", _hoisted_3, [_ctx.currentPage != 1 ? (_openBlock(), _createElementBlock(\"a\", {\n    key: 0,\n    class: \"page-link\",\n    href: \"#\",\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.getTodos(_ctx.currentPage - 1))\n  }, \"Previous\")) : _createCommentVNode(\"v-if\", true)]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.numberOfPages, page => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      class: _normalizeClass([\"page-item\", _ctx.currentPage === page ? 'active' : '']),\n      key: page\n    }, [_createElementVNode(\"a\", {\n      class: \"page-link\",\n      href: \"#\",\n      onClick: $event => _ctx.getTodos(page)\n    }, _toDisplayString(page), 9\n    /* TEXT, PROPS */\n    , _hoisted_4)], 2\n    /* CLASS */\n    );\n  }), 128\n  /* KEYED_FRAGMENT */\n  )), _createElementVNode(\"li\", _hoisted_5, [_ctx.currentPage != _ctx.numberOfPages ? (_openBlock(), _createElementBlock(\"a\", {\n    key: 0,\n    class: \"page-link\",\n    href: \"#\",\n    onClick: _cache[1] || (_cache[1] = $event => _ctx.getTodos(_ctx.currentPage + 1))\n  }, \"Next\")) : _createCommentVNode(\"v-if\", true)])])]);\n}","map":{"version":3,"mappings":";;AACS,gBAAW;;;AACVA,OAAK,EAAC;;;AACJA,OAAK,EAAC;;;;AAENA,OAAK,EAAC;;;uBAJdC,oBAMM,KANN,cAMM,CALJC,oBAIK,IAJL,cAIK,CAHHA,oBAA4H,IAA5H,cAA4H,CAAlEC,oBAAW,mBAA/CF,oBAAiG,GAAjG,EAAiG;UAAA;AAA9FD,SAAK,EAAC,WAAwF;AAA5EI,QAAI,EAAC,GAAuE;AAA5CC,WAAK,sCAAEF,cAASA,mBAAW,CAApB,CAAF;AAAuC,GAAjG,EAAqF,UAArF,sCAAsG,CAA5H,CAGG,qBAFHF,oBAAmLK,SAAnL,EAAmL,IAAnL,EAAmLC,YAA9IJ,kBAA8I,EAAtJK,IAAqB,IAAjB;yBAAjCP,oBAAmL,IAAnL,EAAmL;AAA/KD,WAAK,mBAAC,WAAD,EAA+DG,qBAAcK,IAAd,GAAkB,QAAlB,GAAkB,EAAjF,EAA0K;AAA9HC,SAAG,EAAED;AAAyH,KAAnL,GAA4GN,oBAAkE,GAAlE,EAAkE;AAA/DF,WAAK,EAAC,WAAyD;AAA7CI,UAAI,EAAC,GAAwC;AAAnCC,aAAK,YAAEF,cAASK,IAAT;AAA4B,KAAlE,mBAAwDA,KAAxD,EAA4D;AAAA;AAA5D,MAA4DE,UAA5D,EAA5G;;AAAA;GAAmL,CAAnL;;AAAA,GAEG,GADHR,oBAAoI,IAApI,cAAoI,CAA1EC,oBAAaA,oCAAjDF,oBAAyG,GAAzG,EAAyG;UAAA;AAAtGD,SAAK,EAAC,WAAgG;AAApFI,QAAI,EAAC,GAA+E;AAAxCC,WAAK,sCAAEF,cAASA,mBAAW,CAApB,CAAF;AAAmC,GAAzG,EAAiG,MAAjG,sCAA8G,CAApI,CACG,CAJL,CAKI,CANN","names":["class","_createElementBlock","_createElementVNode","_ctx","href","onClick","_Fragment","_renderList","page","key","_hoisted_4"],"sourceRoot":"","sources":["/Applications/kdh3543/vue_practice1/src/components/TodoPage.vue"],"sourcesContent":["<template>\n    <nav aria-label=\"Page navigation example\">\n      <ul class=\"pagination\">\n        <li class=\"page-item\"><a class=\"page-link\" href=\"#\" v-if=\"currentPage!=1\" @click=\"getTodos(currentPage-1)\">Previous</a></li>\n        <li class=\"page-item\" v-for=\"page in numberOfPages\" :key=\"page\" :class=\"currentPage===page ? 'active' : ''\"><a class=\"page-link\" href=\"#\" @click=\"getTodos(page)\">{{page}}</a></li>\n        <li class=\"page-item\"><a class=\"page-link\" href=\"#\" v-if=\"currentPage!=numberOfPages\" @click=\"getTodos(currentPage+1)\">Next</a></li>\n      </ul>\n    </nav>\n</template>\n\n<script>\n\nexport default {\n    \n    props:{\n        getTodos:{\n            type: ,\n        }\n    },\n    setup(){\n        const getTodos = async(page = currentPage.value) => {\n      currentPage.value = page;\n      try{\n        const res = await axios.get(`http://localhost:3000/todos?_page=${page}&_limit=${limit}`)\n        numberOfTodos.value = res.headers['x-total-count'];\n        todos.value = res.data;\n      }catch(err){\n        error.value = err;\n      }      \n    }\n    getTodos();\n    }\n}\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}