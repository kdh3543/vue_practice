{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"To-Do List\", -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = {\n  style: {\n    \"color\": \"red\"\n  }\n};\nconst _hoisted_5 = {\n  key: 0\n};\n\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_TodoSimpleForm = _resolveComponent(\"TodoSimpleForm\");\n\n  const _component_TodoList = _resolveComponent(\"TodoList\");\n\n  const _component_TodoPage = _resolveComponent(\"TodoPage\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    class: \"form-control\",\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.searchText = $event),\n    placeholder: \"search\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $setup.searchText]]), _hoisted_3, _createVNode(_component_TodoSimpleForm, {\n    onAddTodo: $setup.addTodo\n  }, null, 8\n  /* PROPS */\n  , [\"onAddTodo\"]), _createElementVNode(\"div\", _hoisted_4, _toDisplayString($setup.error), 1\n  /* TEXT */\n  ), !$setup.filteredTodos.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, \" There is nothing \")) : _createCommentVNode(\"v-if\", true), _createVNode(_component_TodoList, {\n    todos: $setup.filteredTodos,\n    onToggleTodo: $setup.toggleTodo,\n    onDeleteTodo: $setup.deleteTodo\n  }, null, 8\n  /* PROPS */\n  , [\"todos\", \"onToggleTodo\", \"onDeleteTodo\"]), _hoisted_6, _createVNode(_component_TodoPage, {\n    onGetTodo: $setup.getTodos\n  }, null, 8\n  /* PROPS */\n  , [\"onGetTodo\"])]);\n}","map":{"version":3,"mappings":";;AACOA,OAAK,EAAC;;;gCAETC,oBAAmB,IAAnB,EAAmB,IAAnB,EAAI,YAAJ,EAAc;AAAA;AAAd;;gCAOAA,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;;AAEKC,OAAiB,EAAjB;AAAA;AAAA;;;;;;gCAKLD,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;;;;;;;;uBAhBFE,oBAkBM,KAlBN,cAkBM,CAhBJC,UAgBI,kBAfJH,oBAKC,OALD,EAKC;AAJGD,SAAK,EAAC,cAIT;AAHGK,QAAI,EAAC,MAGR;+DAFYC,oBAAUC,OAEtB;AADGC,eAAW,EAAC;AACf,GALD;;AAAA,oBAGaF,oBAYT,EATJG,UASI,EARJC,aAAsCC,yBAAtC,EAAsC;AAArBC,aAAQ,EAAEN;AAAW,GAAtC,EAAkC,IAAlC,EAAkC;AAAA;AAAlC,IAAkC,aAAlC,CAQI,EAPJL,oBAAsC,KAAtC,cAAsCY,iBAAbP,YAAa,CAAtC,EAA8B;AAAA;AAA9B,GAOI,GANQA,qBAAcQ,wBAA1BX,oBAEM,KAFN,EAEMY,UAFN,EAAkC,oBAAlC,sCAMI,EAHJL,aAAsFM,mBAAtF,EAAsF;AAA3EC,SAAK,EAAEX,oBAAoE;AAApDY,gBAAW,EAAEZ,iBAAuC;AAA1Ba,gBAAW,EAAEb;AAAa,GAAtF;;AAAA,8CAGI,EAFJc,UAEI,EADJV,aAAgCW,mBAAhC,EAAgC;AAArBC,aAAQ,EAAEhB;AAAW,GAAhC,EAA6B,IAA7B,EAA6B;AAAA;AAA7B,IAA6B,aAA7B,CACI,CAlBN","names":["class","_createElementVNode","style","_createElementBlock","_hoisted_2","type","$setup","$event","placeholder","_hoisted_3","_createVNode","_component_TodoSimpleForm","onAddTodo","_toDisplayString","length","_hoisted_5","_component_TodoList","todos","onToggleTodo","onDeleteTodo","_hoisted_6","_component_TodoPage","onGetTodo"],"sourceRoot":"","sources":["/Applications/kdh3543/vue_practice1/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n\n    <h2>To-Do List</h2>\n    <input\n        class=\"form-control\"\n        type=\"text\" \n        v-model=\"searchText\"\n        placeholder=\"search\"\n    >\n    <hr>\n    <TodoSimpleForm @add-todo=\"addTodo\" />\n    <div style=\"color:red\">{{error}}</div>\n    <div v-if=\"!filteredTodos.length\">\n      There is nothing\n    </div>\n    <TodoList :todos=\"filteredTodos\" @toggle-todo=\"toggleTodo\" @delete-todo=\"deleteTodo\"/>\n    <hr>\n    <TodoPage @get-todo=\"getTodos\"/>\n  </div>\n</template>\n\n<script>\nimport { ref, computed} from 'vue';\nimport TodoSimpleForm from './components/TodoSimpleForm.vue';\nimport TodoList from './components/TodoList.vue';\nimport TodoPage from './components/TodoPage.vue';\nimport axios from 'axios';\n\nexport default {\n  components: {\n    TodoSimpleForm,\n    TodoList,\n    TodoPage\n  },\n  setup() {\n    const todos = ref([]);\n    const error = ref('');\n  \n    const addTodo = async (todo) => {\n      try{\n        const res = await axios.post('http://localhost:3000/todos?_page=1&_limit=5',{\n          subject: todo.subject,\n          completed: todo.completed,\n        });\n        todos.value.push(res.data);\n      }catch(err){\n        error.value = err;\n      } \n      // .then(res => {\n      //   todos.value.push(res.data);\n      // }).catch(err => {\n      //   \n      // });\n    };\n    \n    const getTodos = async(page) => {\n      try{\n        const res = await axios.get(`http://localhost:3000/todos?_page=${page}&_limit=${limit}`)\n        numberOfTodos.value = res.headers['x-total-count'];\n        todos.value = res.data;\n      }catch(err){\n        error.value = err;\n      }      \n    }\n    getTodos();\n\n    const toggleTodo = async (index) => {\n      const id = todos.value[index].id;\n      try{\n        await axios.patch('http://localhost:3000/todos/'+id,{\n          completed: !todos.value[index].completed\n        });\n        todos.value[index].completed = !todos.value[index].completed;\n      }catch(err){\n        error.value = err;\n      }\n      \n    };\n\n    const deleteTodo = async (index) => {\n      const id = todos.value[index].id;\n      try{\n        await axios.delete('http://localhost:3000/todos/'+id);\n        todos.value.splice(index, 1);\n        error.value = '';\n      }catch(err){\n        error.value = err;\n      }      \n    };\n\n    const searchText = ref('');\n    const filteredTodos = computed(() => {\n      if(searchText.value){\n        return todos.value.filter(todo => {\n          return todo.subject.includes(searchText.value);\n        });\n      }else{\n        return todos.value;\n      }\n    })\n    return {\n      todos,\n      addTodo,\n      deleteTodo,\n      toggleTodo,\n      searchText,\n      filteredTodos,\n      error,\n      getTodos,\n    };\n  }\n}\n</script>\n\n<style>\n  .todo {\n    color: gray;\n    text-decoration: line-through;\n  }\n</style>"]},"metadata":{},"sourceType":"module"}