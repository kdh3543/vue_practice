{"ast":null,"code":"import { ref, onUnmounted } from 'vue';\nexport const useToast = () => {\n  const showToast = ref(false);\n  const toastMessage = ref('');\n  const toastAlertType = ref('');\n  const timeout = ref(null);\n\n  const triggerToast = (message, type = 'success') => {\n    toastMessage.value = message;\n    toastAlertType.value = type;\n    ß;\n    showToast.value = true;\n    timeout.value = setTimeout(() => {\n      console.log('hello');\n      toastMessage.value = '';\n      toastAlertType.value = '';\n      showToast.value = false;\n    }, 5000);\n  };\n\n  onUnmounted(() => {\n    clearTimeout(timeout.value);\n  });\n  return {\n    toastMessage,\n    toastAlertType,\n    showToast,\n    triggerToast,\n    onUnmounted\n  };\n};","map":{"version":3,"sources":["/Applications/kdh3543/vue_practice1/src/hooks/toast.js"],"names":["ref","onUnmounted","useToast","showToast","toastMessage","toastAlertType","timeout","triggerToast","message","type","value","ß","setTimeout","console","log","clearTimeout"],"mappings":"AAAA,SAAQA,GAAR,EAAaC,WAAb,QAA+B,KAA/B;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAC1B,QAAMC,SAAS,GAAGH,GAAG,CAAC,KAAD,CAArB;AACA,QAAMI,YAAY,GAAGJ,GAAG,CAAC,EAAD,CAAxB;AACA,QAAMK,cAAc,GAAGL,GAAG,CAAC,EAAD,CAA1B;AACA,QAAMM,OAAO,GAAGN,GAAG,CAAC,IAAD,CAAnB;;AACA,QAAMO,YAAY,GAAG,CAACC,OAAD,EAAUC,IAAI,GAAC,SAAf,KAA6B;AAChDL,IAAAA,YAAY,CAACM,KAAb,GAAqBF,OAArB;AACAH,IAAAA,cAAc,CAACK,KAAf,GAAuBD,IAAvB;AAA4BE,IAAAA,CAAC;AAC7BR,IAAAA,SAAS,CAACO,KAAV,GAAkB,IAAlB;AACAJ,IAAAA,OAAO,CAACI,KAAR,GAAgBE,UAAU,CAAC,MAAM;AAC/BC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAV,MAAAA,YAAY,CAACM,KAAb,GAAqB,EAArB;AACAL,MAAAA,cAAc,CAACK,KAAf,GAAuB,EAAvB;AACAP,MAAAA,SAAS,CAACO,KAAV,GAAkB,KAAlB;AACD,KALyB,EAKxB,IALwB,CAA1B;AAMD,GAVD;;AAWAT,EAAAA,WAAW,CAAC,MAAI;AACZc,IAAAA,YAAY,CAACT,OAAO,CAACI,KAAT,CAAZ;AACH,GAFU,CAAX;AAIA,SAAO;AACHN,IAAAA,YADG;AAEHC,IAAAA,cAFG;AAGHF,IAAAA,SAHG;AAIHI,IAAAA,YAJG;AAKHN,IAAAA;AALG,GAAP;AAOH,CA3BM","sourcesContent":["import {ref, onUnmounted} from 'vue';\n\nexport const useToast = () => {\n    const showToast = ref(false);\n    const toastMessage = ref('');\n    const toastAlertType = ref('');\n    const timeout = ref(null);\n    const triggerToast = (message, type='success') => {\n      toastMessage.value = message;\n      toastAlertType.value = type;ß\n      showToast.value = true;\n      timeout.value = setTimeout(() => {\n        console.log('hello');\n        toastMessage.value = '';\n        toastAlertType.value = '';\n        showToast.value = false;\n      },5000)\n    }\n    onUnmounted(()=>{\n        clearTimeout(timeout.value);\n    })\n\n    return {\n        toastMessage,\n        toastAlertType,\n        showToast,\n        triggerToast,\n        onUnmounted\n    }\n}"]},"metadata":{},"sourceType":"module"}