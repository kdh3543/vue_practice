{"ast":null,"code":"import { ref, computed, watch } from 'vue';\nimport TodoSimpleForm from './components/TodoSimpleForm.vue';\nimport TodoList from './components/TodoList.vue';\nimport axios from 'axios';\nexport default {\n  components: {\n    TodoSimpleForm,\n    TodoList\n  },\n\n  setup() {\n    const todos = ref([]);\n    const error = ref('');\n    const numberOfTodos = ref(0);\n    const currentPage = ref(1);\n    const limit = 5;\n    const searchText = ref('');\n    const numberOfPages = computed(() => {\n      return Math.ceil(numberOfTodos.value / limit);\n    });\n\n    const addTodo = async todo => {\n      try {\n        await axios.post('http://localhost:3000/todos?_page=1&_limit=5', {\n          subject: todo.subject,\n          completed: todo.completed\n        });\n        getTodos(1);\n      } catch (err) {\n        error.value = err;\n      } // .then(res => {\n      //   todos.value.push(res.data);\n      // }).catch(err => {\n      //   \n      // });\n\n    };\n\n    const getTodos = async (page = currentPage.value) => {\n      currentPage.value = page;\n\n      try {\n        const res = await axios.get(`http://localhost:3000/todos?_sort=id?&_order=desc&subject_like=${searchText.value}&_page=${page}&_limit=${limit}`);\n        numberOfTodos.value = res.headers['x-total-count'];\n        todos.value = res.data;\n      } catch (err) {\n        error.value = err;\n      }\n    };\n\n    getTodos();\n\n    const toggleTodo = async index => {\n      const id = todos.value[index].id;\n\n      try {\n        await axios.patch('http://localhost:3000/todos/' + id, {\n          completed: !todos.value[index].completed\n        });\n        todos.value[index].completed = !todos.value[index].completed;\n      } catch (err) {\n        error.value = err;\n      }\n    };\n\n    const deleteTodo = async index => {\n      const id = todos.value[index].id;\n\n      try {\n        await axios.delete('http://localhost:3000/todos/' + id);\n        getTodos(1);\n        error.value = '';\n      } catch (err) {\n        error.value = err;\n      }\n    }; // const filteredTodos = computed(() => {\n    //   if(searchText.value){\n    //     return todos.value.filter(todo => {\n    //       return todo.subject.includes(searchText.value);\n    //     });\n    //   }else{\n    //     return todos.value;\n    //   }\n    // })\n    //watch를 사용하여 검색\n\n\n    watch(searchText, () => {\n      getTodos(1);\n    });\n    return {\n      todos,\n      addTodo,\n      deleteTodo,\n      toggleTodo,\n      searchText,\n      // filteredTodos,\n      error,\n      getTodos,\n      numberOfPages,\n      currentPage\n    };\n  }\n\n};","map":{"version":3,"mappings":"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","names":["ref","computed","watch","TodoSimpleForm","TodoList","axios","components","setup","todos","error","numberOfTodos","currentPage","limit","searchText","numberOfPages","Math","ceil","value","addTodo","todo","post","subject","completed","getTodos","err","page","res","get","headers","data","toggleTodo","index","id","patch","deleteTodo","delete"],"sourceRoot":"","sources":["/Applications/kdh3543/vue_practice1/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n\n    <h2>To-Do List</h2>\n    <input\n        class=\"form-control\"\n        type=\"text\" \n        v-model=\"searchText\"\n        placeholder=\"search\"\n    >\n    <hr>\n    <TodoSimpleForm @add-todo=\"addTodo\" />\n    <div style=\"color:red\">{{error}}</div>\n    <div v-if=\"!todos.length\">\n      There is nothing\n    </div>\n    <TodoList :todos=\"todos\" @toggle-todo=\"toggleTodo\" @delete-todo=\"deleteTodo\"/>\n    <hr>\n    <nav aria-label=\"Page navigation example\">\n      <ul class=\"pagination\">\n        <li class=\"page-item\"><a class=\"page-link\" href=\"#\" v-if=\"currentPage!=1\" @click=\"getTodos(currentPage-1)\">Previous</a></li>\n        <li class=\"page-item\" v-for=\"page in numberOfPages\" :key=\"page\" :class=\"currentPage===page ? 'active' : ''\"><a class=\"page-link\" href=\"#\" @click=\"getTodos(page)\">{{page}}</a></li>\n        <li class=\"page-item\"><a class=\"page-link\" href=\"#\" v-if=\"currentPage!=numberOfPages\" @click=\"getTodos(currentPage+1)\">Next</a></li>\n      </ul>\n    </nav>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, watch} from 'vue';\nimport TodoSimpleForm from './components/TodoSimpleForm.vue';\nimport TodoList from './components/TodoList.vue';\nimport axios from 'axios';\n\nexport default {\n  components: {\n    TodoSimpleForm,\n    TodoList\n  },\n  setup() {\n    const todos = ref([]);\n    const error = ref('');\n    const numberOfTodos = ref(0);\n    const currentPage = ref(1);\n    const limit = 5;\n    const searchText = ref('');\n    const numberOfPages = computed(() => {\n      return Math.ceil(numberOfTodos.value/limit);\n    })\n\n    const addTodo = async (todo) => {\n      try{\n        await axios.post('http://localhost:3000/todos?_page=1&_limit=5',{\n          subject: todo.subject,\n          completed: todo.completed,\n        });\n        getTodos(1);\n      }catch(err){\n        error.value = err;\n      } \n      // .then(res => {\n      //   todos.value.push(res.data);\n      // }).catch(err => {\n      //   \n      // });\n    };\n    \n    const getTodos = async(page = currentPage.value) => {\n      currentPage.value = page;\n      try{\n        const res = await axios.get(`http://localhost:3000/todos?_sort=id?&_order=desc&subject_like=${searchText.value}&_page=${page}&_limit=${limit}`)\n        numberOfTodos.value = res.headers['x-total-count'];\n        todos.value = res.data;\n      }catch(err){\n        error.value = err;\n      }      \n    }\n    getTodos();\n\n    const toggleTodo = async (index) => {\n      const id = todos.value[index].id;\n      try{\n        await axios.patch('http://localhost:3000/todos/'+id,{\n          completed: !todos.value[index].completed\n        });\n        todos.value[index].completed = !todos.value[index].completed;\n      }catch(err){\n        error.value = err;\n      }\n      \n    };\n\n    const deleteTodo = async (index) => {\n      const id = todos.value[index].id;\n      try{\n        await axios.delete('http://localhost:3000/todos/'+id);\n        getTodos(1);\n        error.value = '';\n      }catch(err){\n        error.value = err;\n      }      \n    };\n\n    // const filteredTodos = computed(() => {\n    //   if(searchText.value){\n    //     return todos.value.filter(todo => {\n    //       return todo.subject.includes(searchText.value);\n    //     });\n    //   }else{\n    //     return todos.value;\n    //   }\n    // })\n\n    //watch를 사용하여 검색\n    watch(searchText, () => {\n      getTodos(1);\n    })\n    return {\n      todos,\n      addTodo,\n      deleteTodo,\n      toggleTodo,\n      searchText,\n      // filteredTodos,\n      error,\n      getTodos,\n      numberOfPages,\n      currentPage\n    };\n  }\n}\n</script>\n\n<style>\n  .todo {\n    color: gray;\n    text-decoration: line-through;\n  }\n</style>"]},"metadata":{},"sourceType":"module"}