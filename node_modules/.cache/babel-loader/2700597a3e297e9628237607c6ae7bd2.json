{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"To-Do List\", -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  key: 1\n};\nconst _hoisted_5 = {\n  class: \"card-body p-2 d-flex align-items-center\"\n};\nconst _hoisted_6 = {\n  class: \"form-check flex-grow-1\"\n};\nconst _hoisted_7 = [\"onUpdate:modelValue\"];\nconst _hoisted_8 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_SimpleForm = _resolveComponent(\"SimpleForm\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createVNode(_component_SimpleForm), _ctx.hasError ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, \" Error \")) : _createCommentVNode(\"v-if\", true), !$setup.todos.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, \" nothing \")) : _createCommentVNode(\"v-if\", true), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.todos, (list, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"card mt-2\",\n      key: index\n    }, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_withDirectives(_createElementVNode(\"input\", {\n      class: \"form-check-input\",\n      type: \"checkbox\",\n      \"onUpdate:modelValue\": $event => list.completed = $event\n    }, null, 8\n    /* PROPS */\n    , _hoisted_7), [[_vModelCheckbox, list.completed]]), _createElementVNode(\"label\", {\n      class: _normalizeClass([\"form-check-label\", {\n        todo: list.completed\n      }])\n    }, _toDisplayString(list.contents), 3\n    /* TEXT, CLASS */\n    )]), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n      class: \"btn btn-danger btn-sm\",\n      onClick: $event => $setup.deleteTodo(index)\n    }, \"X\", 8\n    /* PROPS */\n    , _hoisted_8)])])]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]);\n}","map":{"version":3,"mappings":";;AACOA,OAAK,EAAC;;;gCACTC,oBAAmB,IAAnB,EAAmB,IAAnB,EAAI,YAAJ,EAAc;AAAA;AAAd;;;;;;;;;AAUOD,OAAK,EAAC;;;AACJA,OAAK,EAAC;;;;;;;uBAZjBE,oBAuBM,KAvBN,cAuBM,CAtBJC,UAsBI,EArBJC,aAAcC,qBAAd,CAqBI,EAnBOC,+BAAXJ,oBAEM,KAFN,EAEMK,UAFN,EAAqB,SAArB,sCAmBI,GAhBQC,aAAMC,wBAAlBP,oBAEM,KAFN,EAEMQ,UAFN,EAA0B,WAA1B,sCAgBI,qBAbJR,oBAWMS,SAXN,EAWM,IAXN,EAWMC,YAXwCJ,YAWxC,EAX6C,CAApBK,IAAoB,EAAfC,KAAe,KAAV;yBAAzCZ,oBAWM,KAXN,EAWM;AAXDF,WAAK,EAAC,WAWL;AAXgDe,SAAG,EAAED;AAWrD,KAXN,GACEb,oBAQM,KARN,cAQM,CAPJA,oBAGM,KAHN,cAGM,iBAFJA,oBAAyE,OAAzE,EAAyE;AAAlED,WAAK,EAAC,kBAA4D;AAAzCgB,UAAI,EAAC,UAAoC;uCAAhBH,IAAI,CAACI,YAASC;AAAE,KAAzE;;AAAA,sCAAyDL,IAAI,CAACI,YAE1D,EADJhB,oBAAyF,OAAzF,EAAyF;AAAlFD,WAAK,mBAAC,kBAAD,EAAmB;AAAAmB,cAAeN,IAAI,CAACI;AAApB,OAAnB;AAA6E,KAAzF,mBAAkEJ,IAAI,CAACO,SAAvE,EAA+E;AAAA;AAA/E,KACI,CAHN,CAOI,EAHJnB,oBAEM,KAFN,EAEM,IAFN,EAEM,CADJA,oBAA2E,QAA3E,EAA2E;AAAnED,WAAK,EAAC,uBAA6D;AAApCqB,aAAK,YAAEb,kBAAWM,KAAX;AAA6B,KAA3E,EAAiE,GAAjE,EAAkE;AAAA;AAAlE,MAAkEQ,UAAlE,CACI,CAFN,CAGI,CARN,EADF;GAWM,CAXN;;AAAA,GAaI,EAvBN","names":["class","_createElementVNode","_createElementBlock","_hoisted_2","_createVNode","_component_SimpleForm","_ctx","_hoisted_3","$setup","length","_hoisted_4","_Fragment","_renderList","list","index","key","type","completed","$event","todo","contents","onClick","_hoisted_8"],"sourceRoot":"","sources":["/Applications/kdh3543/vue_practice1/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <h2>To-Do List</h2>\n    <SimpleForm />\n    \n    <div v-if=\"hasError\">\n      Error\n    </div>\n    <div v-if=\"!todos.length\">\n      nothing\n    </div>\n    <div class=\"card mt-2\" v-for=\"(list,index) in todos\" :key=\"index\">\n      <div class=\"card-body p-2 d-flex align-items-center\">\n        <div class=\"form-check flex-grow-1 \">\n          <input class=\"form-check-input\" type=\"checkbox\" v-model=\"list.completed\">\n          <label class=\"form-check-label\" :class=\"{todo:list.completed}\"> {{list.contents}}</label>\n        </div>\n        <div>\n          <button class=\"btn btn-danger btn-sm\" @click=\"deleteTodo(index)\">X</button>\n        </div>\n      </div>\n      \n    </div>\n    \n  </div>\n</template>\n\n<script>\nimport {ref} from 'vue';\nimport SimpleForm from './components/SimpleForm.vue';\n\nexport default {\n  components: {\n    SimpleForm\n  },\n  setup(){\n    // const completed = ref(false);\n    \n    const todos = ref([]);\n    const onSubmit = () => {\n\n    }\n\n    const deleteTodo = (index) => {\n      todos.value.splice(index,1);\n    }\n\n    return{\n      onSubmit,\n      todos,\n      deleteTodo\n      \n    }\n  }\n}\n</script>\n\n<style>\n  .todo{\n    text-decoration: line-through;\n    color: gray;\n  }\n</style>\n"]},"metadata":{},"sourceType":"module"}