{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = [\"onClick\"];\nconst _hoisted_2 = {\n  class: \"form-check flex-grow-1\"\n};\nconst _hoisted_3 = [\"checked\", \"onChange\"];\nconst _hoisted_4 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.todos, (todo, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: todo.id,\n      class: \"card mt-2\"\n    }, [_createElementVNode(\"div\", {\n      class: \"card-body p-2 d-flex align-items-center\",\n      onClick: $event => $setup.moveToPage(todo.id)\n    }, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"input\", {\n      class: \"form-check-input\",\n      type: \"checkbox\",\n      checked: todo.completed,\n      onChange: $event => $setup.toggleTodo(index)\n    }, null, 40\n    /* PROPS, HYDRATE_EVENTS */\n    , _hoisted_3), _createElementVNode(\"label\", {\n      class: _normalizeClass([\"form-check-label\", {\n        todo: todo.completed\n      }])\n    }, _toDisplayString(todo.subject), 3\n    /* TEXT, CLASS */\n    )]), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n      class: \"btn btn-danger btn-sm\",\n      onClick: $event => $setup.deleteTodo(index)\n    }, \" X \", 8\n    /* PROPS */\n    , _hoisted_4)])], 8\n    /* PROPS */\n    , _hoisted_1)]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;AAOaA,OAAK,EAAC;;;;;2BANjBC,oBA6BQC,SA7BR,EA6BQ,IA7BR,EA6BQC,YA5BoBC,YA4BpB,EA5ByB,CAArBC,IAAqB,EAAfC,KAAe,KAAV;yBADvBL,oBA6BQ,KA7BR,EA6BQ;AA3BHM,SAAG,EAAEF,IAAI,CAACG,EA2BP;AA1BJR,WAAK,EAAC;AA0BF,KA7BR,GAKIS,oBAuBM,KAvBN,EAuBM;AAvBDT,WAAK,EAAC,yCAuBL;AAvBgDU,aAAK,YAAEC,kBAAWN,IAAI,CAACG,EAAhB;AAuBvD,KAvBN,GACEC,oBAaM,KAbN,cAaM,CAZJA,oBAKC,OALD,EAKC;AAJCT,WAAK,EAAC,kBAIP;AAHCY,UAAI,EAAC,UAGN;AAFEC,aAAO,EAAER,IAAI,CAACS,SAEhB;AADEC,cAAM,YAAEJ,kBAAWL,KAAX;AACV,KALD;;AAAA,iBAYI,EANJG,oBAKQ,OALR,EAKQ;AAJNT,WAAK,mBAAC,kBAAD,EAAmB;AAAAK,cACRA,IAAI,CAACS;AADG,OAAnB;AAIC,KALR,mBAIKT,IAAI,CAACW,QAJV,EAIiB;AAAA;AAJjB,KAMI,CAbN,GAcAP,oBAOM,KAPN,EAOM,IAPN,EAOM,CANJA,oBAKS,QALT,EAKS;AAJPT,WAAK,EAAC,uBAIC;AAHNU,aAAK,YAAEC,kBAAWL,KAAX;AAGD,KALT,EAGC,KAHD,EAKA;AAAA;AALA,MAKAW,UALA,CAMI,CAPN,EAfF;;AAAA,kBALJ;GA6BQ,CA7BR;;AAAA","names":["class","_createElementBlock","_Fragment","_renderList","$props","todo","index","key","id","_createElementVNode","onClick","$setup","type","checked","completed","onChange","subject","_hoisted_4"],"sourceRoot":"","sources":["/Applications/kdh3543/vue_practice1/src/components/TodoList.vue"],"sourcesContent":["<template>\n  <div \n      v-for=\"(todo, index) in todos\"\n      :key=\"todo.id\"\n      class=\"card mt-2\"\n    >\n      <div class=\"card-body p-2 d-flex align-items-center\" @click=\"moveToPage(todo.id)\">\n        <div class=\"form-check flex-grow-1\">\n          <input \n            class=\"form-check-input\" \n            type=\"checkbox\"\n            :checked=\"todo.completed\"\n            @change=\"toggleTodo(index)\"\n          >\n          <label \n            class=\"form-check-label\"\n            :class=\"{ todo: todo.completed }\"\n          >\n            {{ todo.subject }}\n          </label>\n        </div>\n        <div>\n          <button \n            class=\"btn btn-danger btn-sm\"\n            @click=\"deleteTodo(index)\"\n          >\n            X\n          </button>\n        </div>\n      </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    props: {\n        todos: {\n            type: Array,\n            required: true\n        }\n    },\n    emits: ['toggle-todo','delete-todo'],\n    setup(props, {emit}) {\n      const toggleTodo = (index) => {\n        emit('toggle-todo', index);\n      };\n      const deleteTodo = (index) => {\n        emit('delete-todo', index);\n      }\n\n      const moveToPage = (todoId) => {\n        console.log(todoId);\n      }\n\n      return {\n        toggleTodo,\n        deleteTodo,\n        moveToPage\n      }\n    }\n}\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}