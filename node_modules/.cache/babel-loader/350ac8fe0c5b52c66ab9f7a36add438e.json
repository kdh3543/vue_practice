{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-54844eca\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"form-group\"\n};\nconst _hoisted_2 = [\"value\"];\nconst _hoisted_3 = {\n  key: 0,\n  class: \"text-red\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"label\", null, _toDisplayString($props.label), 1\n  /* TEXT */\n  ), _createElementVNode(\"input\", {\n    value: $props.subject,\n    type: \"text\",\n    class: \"form-control\",\n    onInput: _cache[0] || (_cache[0] = (...args) => $setup.onInput && $setup.onInput(...args))\n  }, null, 40\n  /* PROPS, HYDRATE_EVENTS */\n  , _hoisted_2), _ctx.subjectError ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString(_ctx.subjectError), 1\n  /* TEXT */\n  )) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;;;;AACSA,OAAK,EAAC;;;;;AAGkBA,OAAK,EAAC;;;uBAHnCC,oBAIM,KAJN,cAIM,CAHFC,oBAAwB,OAAxB,EAAwB,IAAxB,EAAwBC,iBAAfC,YAAe,CAAxB,EAAc;AAAA;AAAd,GAGE,EAFFF,oBAA0E,OAA1E,EAA0E;AAAlEG,SAAK,EAAED,cAA2D;AAAlDE,QAAI,EAAC,MAA6C;AAAtCN,SAAK,EAAC,cAAgC;AAAhBO,WAAK,yCAAEC,yCAAF;AAAW,GAA1E;;AAAA,eAEE,EADSC,mCAAXR,oBAAgE,KAAhE,cAAgEE,iBAApBM,iBAAoB,CAAhE,EAAwD;AAAA;AAAxD,wCACE,CAJN","names":["class","_createElementBlock","_createElementVNode","_toDisplayString","$props","value","type","onInput","$setup","_ctx"],"sourceRoot":"","sources":["/Applications/kdh3543/vue_practice1/src/components/Input.vue"],"sourcesContent":["<template>\n    <div class=\"form-group\">\n        <label>{{label}}</label>\n        <input :value=\"subject\" type=\"text\" class=\"form-control\" @input=\"onInput\">\n        <div v-if=\"subjectError\" class=\"text-red\">{{subjectError}}</div>\n    </div>\n</template>\n\n<script>\nexport default {\n    props:{\n        label: {\n            type: String,\n            required: true\n        },\n        error: {\n            type: String,\n            required: true\n        },\n        subject: {\n            type: String,\n            required: true\n        },\n\n    },\n    setup(){\n        const onInput = (e) => {\n            console.log(e.target.value)\n        }\n        return{\n            onInput\n        }\n    }\n}\n</script>\n\n<style scoped>\n    .text-red{\n        color: red;\n    }\n</style>"]},"metadata":{},"sourceType":"module"}