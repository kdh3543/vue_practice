{"ast":null,"code":"import { ref, computed, onBeforeMount, onMounted, onBeforeUpdate, onUpdated } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport axios from 'axios';\nimport _ from 'lodash';\nimport Toast from '@/components/Toast.vue';\nexport default {\n  components: {\n    Toast\n  },\n\n  setup() {\n    onBeforeMount(() => {\n      console.log(document.querySelector('#kossie'));\n    });\n    onMounted(() => {\n      console.log(document.querySelector('#kossie'));\n    });\n    onBeforeUpdate(() => {\n      console.log('before up');\n    });\n    onUpdated(() => {\n      console.log('update');\n    });\n    console.log('hoee');\n    const route = useRoute();\n    const router = useRouter();\n    const todo = ref(null);\n    const originTodo = ref(null);\n    const loading = ref(true);\n    const todoId = route.params.id;\n    const showToast = ref(false);\n    const toastMessage = ref('');\n    const toastAlertType = ref('');\n\n    const getTodo = async () => {\n      try {\n        const res = await axios.get('http://localhost:3000/todos/' + todoId);\n        todo.value = { ...res.data\n        };\n        originTodo.value = { ...res.data\n        };\n        loading.value = false;\n      } catch (err) {\n        triggerToast('error', 'danger');\n      }\n    };\n\n    const todoUpdated = computed(() => {\n      return !_.isEqual(todo.value, originTodo.value);\n    });\n\n    const toggleTodoStatus = () => {\n      todo.value.completed = !todo.value.completed;\n    };\n\n    const moveToTodoListPage = () => {\n      router.push({\n        name: 'Todos'\n      });\n    };\n\n    const triggerToast = (message, type = 'success') => {\n      toastMessage.value = message;\n      toastAlertType.value = type;\n      showToast.value = true;\n      setTimeout(() => {\n        toastMessage.value = '';\n        toastAlertType.value = '';\n        showToast.value = false;\n      }, 3000);\n    };\n\n    const onSave = async () => {\n      try {\n        const res = await axios.put('http://localhost:3000/todos/' + todoId, {\n          subject: todo.value.subject,\n          completed: todo.value.completed\n        });\n        originTodo.value = { ...res.data\n        };\n        triggerToast('success save');\n      } catch (err) {\n        triggerToast('error', 'danger');\n      }\n    };\n\n    getTodo();\n    return {\n      todo,\n      loading,\n      toggleTodoStatus,\n      moveToTodoListPage,\n      onSave,\n      todoUpdated,\n      showToast,\n      toastMessage,\n      toastAlertType\n    };\n  }\n\n};","map":{"version":3,"mappings":"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","names":["ref","computed","onBeforeMount","onMounted","onBeforeUpdate","onUpdated","useRoute","useRouter","axios","_","Toast","components","setup","console","log","document","querySelector","route","router","todo","originTodo","loading","todoId","params","id","showToast","toastMessage","toastAlertType","getTodo","res","get","value","data","err","triggerToast","todoUpdated","isEqual","toggleTodoStatus","completed","moveToTodoListPage","push","name","message","type","setTimeout","onSave","put","subject"],"sourceRoot":"","sources":["/Applications/kdh3543/vue_practice1/src/pages/todos/_id.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>To-Do Page</h1>\n    <div v-if=\"loading\">\n      Loading...\n    </div>\n    <form v-else @submit.prevent=\"onSave\">\n      <div class=\"row\">\n        <div class=\"col-6\">\n          <div class=\"form-group\">\n            <label>Subject</label>\n            <input v-model=\"todo.subject\" type=\"text\" class=\"form-control\">\n          </div>\n        </div>\n        <div class=\"col-6\">\n          <div class=\"form-group\">\n            <label>Status</label>\n            <div>\n              <button type=\"button\" class=\"btn\" :class=\"todo.completed ? 'btn-success' : 'btn-danger'\" @click=\"toggleTodoStatus\">{{todo.completed ? 'Completed' : 'Incompleted'}}</button>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"!todoUpdated\">Save</button>\n      <button class=\"btn btn-outline-dark m-2\" @click=\"moveToTodoListPage\">Cancel</button>\n    </form>\n    <Toast v-if=\"showToast\" :message=\"toastMessage\" :type=\"toastAlertType\"/>\n  </div>\n  <div id=\"kossie\">\n    coder\n  </div>\n</template>\n\n<script>\nimport {ref, computed, onBeforeMount, onMounted,onBeforeUpdate,onUpdated} from 'vue';\nimport {useRoute, useRouter} from 'vue-router';\nimport axios from 'axios';\nimport _ from 'lodash';\nimport Toast from '@/components/Toast.vue';\n\nexport default {\n    components:{\n      Toast\n    },\n    setup(){\n      onBeforeMount(()=>{\n        console.log(document.querySelector('#kossie'))\n      });\n      onMounted(()=>{\n        console.log(document.querySelector('#kossie'))\n      })\n      onBeforeUpdate(()=>{\n        console.log('before up')\n      })\n      onUpdated(() =>{\n        console.log('update')\n      })\n      console.log('hoee')\n      const route = useRoute();\n      const router = useRouter();\n      const todo = ref(null);\n      const originTodo = ref(null);\n      const loading = ref(true);\n      const todoId = route.params.id;\n      const showToast = ref(false);\n      const toastMessage = ref('');\n      const toastAlertType = ref('');\n\n      const getTodo = async () => {\n        try{\n          const res = await axios.get('http://localhost:3000/todos/'+todoId)\n        \n          todo.value = {...res.data};\n          originTodo.value = {...res.data};\n          loading.value = false;\n        }catch(err){\n          triggerToast('error','danger');\n        }\n        \n      }\n      \n      const todoUpdated = computed(() => {\n        return !_.isEqual(todo.value,originTodo.value);\n      })\n\n      const toggleTodoStatus = () => {\n        todo.value.completed = !todo.value.completed;\n      }\n\n      const moveToTodoListPage = () => {\n        router.push({\n          name:'Todos'\n        })\n      }\n      const triggerToast = (message, type='success') => {\n        toastMessage.value = message;\n        toastAlertType.value = type;\n        showToast.value = true;\n        setTimeout(() => {\n          toastMessage.value = '';\n          toastAlertType.value = '';\n          showToast.value = false;\n        },3000)\n      }\n      const onSave = async () => {\n        try{\n          const res = await axios.put('http://localhost:3000/todos/'+todoId,{\n            subject: todo.value.subject,\n            completed: todo.value.completed\n          })\n          originTodo.value = {...res.data}\n          triggerToast('success save');\n        }catch(err){\n          triggerToast('error','danger');\n        }\n        \n      }\n\n      getTodo();\n      return{\n        todo,\n        loading,\n        toggleTodoStatus,\n        moveToTodoListPage,\n        onSave,\n        todoUpdated,\n        showToast,\n        toastMessage,\n        toastAlertType\n      }\n    }\n}\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}