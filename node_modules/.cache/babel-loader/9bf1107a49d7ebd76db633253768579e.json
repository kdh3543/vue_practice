{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, vShow as _vShow, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"d-flex\"\n};\nconst _hoisted_2 = {\n  class: \"flex-grow-1 mr-2\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", null, [/*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"btn btn-primary\",\n  type: \"submit\"\n}, \" Add \")], -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = {\n  style: {\n    \"color\": \"red\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $setup.onSubmit && $setup.onSubmit(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n    class: \"form-control\",\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.todo = $event),\n    placeholder: \"Type new to-do\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $setup.todo]])]), _hoisted_3]), _withDirectives(_createElementVNode(\"div\", _hoisted_4, \" This field cannot be empty \", 512\n  /* NEED_PATCH */\n  ), [[_vShow, $setup.hasError]])], 32\n  /* HYDRATE_EVENTS */\n  );\n}","map":{"version":3,"mappings":";;AAEaA,OAAK,EAAC;;;AACFA,OAAK,EAAC;;;gCAQXC,oBAOM,KAPN,EAOM,IAPN,EAOM,cANFA,oBAKS,QALT,EAKS;AAJLD,OAAK,EAAC,iBAID;AAHLE,MAAI,EAAC;AAGA,CALT,EAGC,OAHD,CAME,CAPN;;AAAA;;;AASmBC,OAAkB,EAAlB;AAAA;AAAA;;;uBAnB3BC,oBAsBO,MAtBP,EAsBO;AAtBAC,YAAM,wDAAUC,2CAAV,EAAkB,WAAlB;AAsBN,GAtBP,GACIL,oBAiBM,KAjBN,cAiBM,CAhBFA,oBAOM,KAPN,cAOM,iBANFA,oBAKC,OALD,EAKC;AAJGD,SAAK,EAAC,cAIT;AAHGE,QAAI,EAAC,MAGR;+DAFYI,cAAIC,OAEhB;AADGC,eAAW,EAAC;AACf,GALD;;AAAA,oBAGaF,cAGX,CAPN,CAgBE,EARFG,UAQE,CAjBN,mBAkBAR,oBAEM,KAFN,cAA0C,8BAA1C,EAEA;AAAA;AAFA,KAEA,UAFaK,gBAEb,GArBJ;;AAAA","names":["class","_createElementVNode","type","style","_createElementBlock","onSubmit","$setup","$event","placeholder","_hoisted_3"],"sourceRoot":"","sources":["/Applications/kdh3543/vue_practice1/src/components/TodoSimpleForm.vue"],"sourcesContent":["<template>\n    <form @submit.prevent=\"onSubmit\">\n        <div class=\"d-flex\">\n            <div class=\"flex-grow-1 mr-2\">\n                <input\n                    class=\"form-control\"\n                    type=\"text\" \n                    v-model=\"todo\"\n                    placeholder=\"Type new to-do\"\n                >\n            </div>\n            <div>\n                <button \n                    class=\"btn btn-primary\"\n                    type=\"submit\"\n                >\n                    Add\n                </button>\n            </div>\n        </div>\n        <div v-show=\"hasError\" style=\"color: red\">\n            This field cannot be empty\n        </div>\n    </form>\n</template>\n\n<script>\n    import { ref } from 'vue';\n\n    export default {\n        emits: ['add-todo'],\n        setup(props, context) {\n            const todo = ref('');\n            const hasError = ref(false);\n            const onSubmit = () => {\n                if (todo.value === '') {\n                    hasError.value = true;\n                } else {\n                    context.emit('add-todo', {\n                        id: Date.now(),\n                        subject: todo.value,\n                        completed: false,\n                    });\n                    hasError.value = false;\n                    todo.value = '';\n                }\n            };\n\n            return {\n                todo,\n                hasError,\n                onSubmit,\n            };\n        }\n    }\n</script>\n\n<style></style>"]},"metadata":{},"sourceType":"module"}