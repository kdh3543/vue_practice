{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createTextVNode(\" Plusdo \");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"input\", {\n    type: \"text\",\n    onInput: _cache[0] || (_cache[0] = (...args) => $setup.writeText && $setup.writeText(...args))\n  }, null, 32\n  /* HYDRATE_EVENTS */\n  )]);\n}","map":{"version":3,"mappings":";;iDACO;;;uBAALA,oBAGM,KAHN,EAGM,IAHN,EAGM,aADDC,oBAAsC,OAAtC,EAAsC;AAA/BC,QAAI,EAAC,MAA0B;AAAlBC,WAAK,yCAAEC,6CAAF;AAAa,GAAtC;;AAAA,GACC,CAHN","names":["_createElementBlock","_createElementVNode","type","onInput","$setup"],"sourceRoot":"","sources":["/Applications/kdh3543/vue_practice1/src/components/PlusDo.vue"],"sourcesContent":["<template>\n  <div>\n      Plusdo\n       <input type=\"text\" @input=\"writeText\">\n  </div>\n</template>\n\n<script>\nexport default {\n    emits:['writeText'],\n    setup({emit}){\n        const writeText = (writeText) =>{\n            emit('writeText');\n        }\n        return{\n            writeText\n        }\n    }\n    \n}\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}